{
    "dcount": 4,
    "frameworks": ["angular2", "cycle", "react", "preact", "vue"],
    "icount": 17,
    "tlength": 17297,
    "demos": [{
        "frameworks": [{
            "name": "Angular2",
            "folderName": "angular2",
            "implementations": [{
                "title": "A vanilla implementation",
                "author": "krawaller",
                "language": "typescript",
                "maindep": "@angular/core",
                "folderName": "vanilla",
                "demoName": "composition",
                "framework": "angular2",
                "niceFrameworkName": "Angular2",
                "deps": [{
                    "package": "@angular/common",
                    "version": "2.0.0-rc.4"
                }, {
                    "package": "@angular/compiler",
                    "version": "2.0.0-rc.4"
                }, {
                    "package": "@angular/core",
                    "version": "2.0.0-rc.4"
                }, {
                    "package": "@angular/forms",
                    "version": "0.2.0"
                }, {
                    "package": "@angular/http",
                    "version": "2.0.0-rc.4"
                }, {
                    "package": "@angular/platform-browser",
                    "version": "2.0.0-rc.4"
                }, {
                    "package": "@angular/platform-browser-dynamic",
                    "version": "2.0.0-rc.4"
                }, {
                    "package": "@angular/router",
                    "version": "3.0.0-beta.2"
                }, {
                    "package": "core-js",
                    "version": "^2.4.1"
                }, {
                    "package": "es6-shim",
                    "version": "^0.35.0"
                }, {
                    "package": "reflect-metadata",
                    "version": "0.1.3"
                }, {
                    "package": "rxjs",
                    "version": "5.0.0-beta.6"
                }, {
                    "package": "zone.js",
                    "version": "0.6.12"
                }],
                "frameworkVersion": "2.0.0-rc.4",
                "explanation": "<p>This is an idiomatic Angular 2 solution without any surprises. All communication is clearly defined through the <code>@Input</code> and <code>@Output</code> decorators.</p>\n<p>I opted not to actively store the field value in my model, instead I fetch it from the DOM using a <code>@ViewChild</code> reference upon submission. This seems to be a typical Angular approach.</p>\n",
                "files": [{
                    "filename": "app",
                    "suffix": ".ts",
                    "size": 408,
                    "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild,EventEmitter,Output} from <span class=\"hljs-string\">'@angular/core'</span>\n<span class=\"hljs-keyword\">import</span> {Field} from <span class=\"hljs-string\">'./field.ts'</span>\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;field instruction=\"Enter name\" (submission)=\"onSubmission($event)\"&gt;&lt;/field&gt;\n    &lt;p&gt;Submitted name: {{submission}}&lt;/p&gt;\n  `</span>,\n  directives: [Field]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> App {\n  submission: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'Steve'</span>\n  onSubmission(txt) {\n    <span class=\"hljs-keyword\">this</span>.submission = txt;\n  }\n}",
                    "others": [{
                        "url": "composition_cycle_comphelper_info.html",
                        "title": "With a composition helper",
                        "framework": "Cycle",
                        "filename": "app",
                        "suffix": ".js",
                        "size": 479,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">view</span>(<span class=\"hljs-params\">{childsinks:{submit$,DOM}}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> xs.combine(submit$.startWith(<span class=\"hljs-string\">'Steve'</span>),DOM).map(([submission,childvtree])=&gt; div([\n    childvtree,\n    p(<span class=\"hljs-string\">'Submitted value: '</span>+submission)\n  ]))\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: view(sources),\n    instruction$: xs.of(<span class=\"hljs-string\">'Enter name'</span>)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(App,Field,<span class=\"hljs-string\">'instruction$'</span>)"
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "filename": "app",
                        "suffix": ".js",
                        "size": 405,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n\n<span class=\"hljs-keyword\">let</span> App = React.createClass({\n  getInitialState: ()=&gt; ({submission:<span class=\"hljs-string\">'Steve'</span>}),\n  onSubmission(txt) { <span class=\"hljs-keyword\">this</span>.setState({submission:txt}) },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Field</span> <span class=\"hljs-attr\">instruction</span>=<span class=\"hljs-string\">\"Enter name\"</span> <span class=\"hljs-attr\">onSubmission</span>=<span class=\"hljs-string\">{this.onSubmission}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Submitted value: {this.state.submission}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    )\n  }\n})\n\nexport default App</span>"
                    }]
                }, {
                    "filename": "bootstrap",
                    "suffix": ".ts",
                    "size": 171,
                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'core-js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> {bootstrap}    from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n<span class=\"hljs-keyword\">import</span> {App} from <span class=\"hljs-string\">'./app.ts'</span>;\nbootstrap(App);\n",
                    "others": [{
                        "url": "composition_cycle_comphelper_info.html",
                        "title": "With a composition helper",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 172,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nrun(App, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 143,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }]
                }, {
                    "filename": "confirm",
                    "suffix": ".ts",
                    "size": 754,
                    "code": "<span class=\"hljs-keyword\">import</span> {Component,Input,Output,EventEmitter} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'confirm'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;span *ngIf=\"mode !== 'confirm'\"&gt;\n      &lt;button (click)=\"maybe()\" [disabled]=\"mode === 'disabled'\"&gt;Submit&lt;/button&gt;\n    &lt;/span&gt;\n    &lt;span *ngIf=\"mode === 'confirm'\"&gt;\n      &lt;button (click)=\"changedmymind()\"&gt;Cancel&lt;/button&gt;\n      &lt;button (click)=\"yesimsure()\"&gt;Confirm&lt;/button&gt;\n    &lt;/span&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Confirm {\n  mode: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'waiting'</span>\n  @Output() confirm = <span class=\"hljs-keyword\">new</span> EventEmitter&lt;<span class=\"hljs-built_in\">void</span>&gt;()\n  @Input() <span class=\"hljs-keyword\">set</span> disabled(bool: <span class=\"hljs-built_in\">boolean</span>){\n    <span class=\"hljs-keyword\">this</span>.mode = bool ? <span class=\"hljs-string\">'disabled'</span> : <span class=\"hljs-string\">'waiting'</span>\n  }\n  maybe() { <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'confirm'</span> }\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'waiting'</span> }\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.confirm.emit();\n    <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'waiting'</span>\n  }\n}",
                    "others": [{
                        "url": "composition_cycle_comphelper_info.html",
                        "title": "With a composition helper",
                        "framework": "Cycle",
                        "filename": "confirm",
                        "suffix": ".js",
                        "size": 1022,
                        "code": "<span class=\"hljs-keyword\">import</span> {span, button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = sources=&gt; xs.merge(\n  sources.disabled$.map(i=&gt; i ? <span class=\"hljs-string\">'DISABLE'</span> : <span class=\"hljs-string\">'ENABLE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.maybe'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'MAYBE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.cancel'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CANCEL'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.confirm'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CONFIRM'</span>)\n)\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((s,action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'DISABLE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'disabled'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'MAYBE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'confirm'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'ENABLE'</span>: <span class=\"hljs-keyword\">return</span> s === <span class=\"hljs-string\">'disabled'</span> ? <span class=\"hljs-string\">'waiting'</span> : s\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'waiting'</span>\n  }\n},<span class=\"hljs-string\">'disabled'</span>)\n\n<span class=\"hljs-keyword\">const</span> view = state$ =&gt; state$.map(state=&gt; state === <span class=\"hljs-string\">'confirm'</span>\n  ? span([button(<span class=\"hljs-string\">'.confirm'</span>,<span class=\"hljs-string\">'Confirm'</span>),button(<span class=\"hljs-string\">'.cancel'</span>,<span class=\"hljs-string\">'Cancel'</span>)])\n  : button(<span class=\"hljs-string\">'.maybe'</span>,{attrs:{disabled: state === <span class=\"hljs-string\">'disabled'</span>}},<span class=\"hljs-string\">'Submit'</span>)\n)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> sources=&gt; {\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources)  \n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    confirm$: action$.filter(i =&gt; i === <span class=\"hljs-string\">'CONFIRM'</span>)\n  }\n}"
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "filename": "confirm",
                        "suffix": ".js",
                        "size": 602,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Confirm = React.createClass({\n  getInitialState: ()=&gt; ({mode:<span class=\"hljs-string\">'waiting'</span>}),\n  maybe() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'confirm'</span>}) },\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>}) },\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.props.confirm();\n    <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>})\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.state.mode !== <span class=\"hljs-string\">'confirm'</span>\n    ? <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.maybe}</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{this.props.disabled}</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n    : <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.changedmymind}</span>&gt;</span>Cancel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.yesimsure}</span>&gt;</span>Confirm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Confirm"
                    }]
                }, {
                    "filename": "field",
                    "suffix": ".ts",
                    "size": 578,
                    "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild,EventEmitter,Input,Output} from <span class=\"hljs-string\">'@angular/core'</span>\n<span class=\"hljs-keyword\">import</span> {Confirm} from <span class=\"hljs-string\">'./confirm.ts'</span>\n\n@Component({\n  selector: <span class=\"hljs-string\">'field'</span>,\n  template: <span class=\"hljs-string\">`\n    {{instruction}}: &lt;input #field (input)=\"0\"&gt;\n    &lt;confirm (confirm)=\"onConfirm()\" [disabled]=\"!field.value.length\"&gt;&lt;/confirm&gt;\n  `</span>,\n  directives: [Confirm]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Field {\n  @ViewChild(<span class=\"hljs-string\">'field'</span>) input: <span class=\"hljs-built_in\">any</span>\n  @Input() instruction: <span class=\"hljs-built_in\">string</span>\n  @Output() submission = <span class=\"hljs-keyword\">new</span> EventEmitter&lt;<span class=\"hljs-built_in\">string</span>&gt;()\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.submission.emit(<span class=\"hljs-keyword\">this</span>.input.nativeElement.value)\n    <span class=\"hljs-keyword\">this</span>.input.nativeElement.value = <span class=\"hljs-string\">''</span>\n  }\n}",
                    "others": [{
                        "url": "composition_cycle_comphelper_info.html",
                        "title": "With a composition helper",
                        "framework": "Cycle",
                        "filename": "field",
                        "suffix": ".js",
                        "size": 1408,
                        "code": "<span class=\"hljs-keyword\">import</span> {div, input, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = (DOM,confirm$)=&gt; {\n  <span class=\"hljs-keyword\">const</span> input$ = DOM.select(<span class=\"hljs-string\">'.field'</span>).events(<span class=\"hljs-string\">'input'</span>)\n  <span class=\"hljs-keyword\">const</span> newValue$ = input$\n    .map(e =&gt; ({type:<span class=\"hljs-string\">'INPUT'</span>, data:e.target.value}))\n  <span class=\"hljs-keyword\">const</span> submit$ = input$\n    .map(i=&gt; confirm$.map(s=&gt;({type:<span class=\"hljs-string\">'SUBMIT'</span>, data:i.target.value})))\n    .flatten()\n  <span class=\"hljs-keyword\">return</span> xs.merge(submit$,newValue$)\n}\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((state, action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action.type){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'INPUT'</span>: <span class=\"hljs-keyword\">return</span> {...state, input: action.data}\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'SUBMIT'</span>: <span class=\"hljs-keyword\">return</span> {submission: action.data, input: <span class=\"hljs-string\">''</span>}\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> state\n  }\n}, {submission:<span class=\"hljs-string\">''</span>,input:<span class=\"hljs-string\">''</span>} )\n\n<span class=\"hljs-keyword\">const</span> view = (state$,confirmvtree$,instruction$)=&gt;\n  xs.combine(state$,confirmvtree$,instruction$).map(([state,confirmvtree,instruction])=&gt;\n    div(<span class=\"hljs-string\">'.child'</span>,[\n      instruction+<span class=\"hljs-string\">': '</span>,\n      input(<span class=\"hljs-string\">'.field'</span>, {props:{value: state.input}}),\n      confirmvtree\n    ])\n  )\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Field</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources.DOM, sources.childsinks.confirm$)\n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$, sources.childsinks.DOM, sources.instruction$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    submit$: action$.filter(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span>).map(a=&gt;a.data),\n    disabled$: action$.map(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span> || !a.data)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(Field,Confirm,<span class=\"hljs-string\">'disabled$'</span>)\n"
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "filename": "field",
                        "suffix": ".js",
                        "size": 543,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n\n<span class=\"hljs-keyword\">let</span> Field = React.createClass({\n  getInitialState: ()=&gt; ({field:<span class=\"hljs-string\">''</span>}),\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.props.onSubmission(<span class=\"hljs-keyword\">this</span>.state.field);\n    <span class=\"hljs-keyword\">this</span>.setState({field:<span class=\"hljs-string\">''</span>});\n  },\n  onChange(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({field:e.target.value});\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      &lt;div&gt;\n        {this.props.instruction}: &lt;input value={this.state.field} onChange={this.onChange}/&gt;\n        &lt;Confirm disabled={!this.state.field} confirm={this.onConfirm}/&gt;\n      &lt;/div&gt;\n    )\n  }\n})\n\nexport default Field"
                    }]
                }],
                "bundleSize": 2603504,
                "size": 1911,
                "url": "composition_angular2_vanilla_info.html",
                "bundleName": "composition_angular2_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/composition/angular2/vanilla"
            }]
        }, {
            "name": "Cycle",
            "folderName": "cycle",
            "implementations": [{
                "title": "With a composition helper",
                "author": "krawaller",
                "maindep": "@cycle/dom",
                "folderName": "comphelper",
                "demoName": "composition",
                "framework": "cycle",
                "niceFrameworkName": "Cycle",
                "deps": [{
                    "package": "xstream",
                    "version": "5.1.0"
                }, {
                    "package": "@cycle/dom",
                    "version": "10.0.5"
                }, {
                    "package": "@cycle/xstream-run",
                    "version": "3.0.3"
                }],
                "frameworkVersion": "10.0.5",
                "explanation": "<p>This CycleJS implementation of the app leans heavily on the composition helper introduced <a href=\"https://twitter.com/krawaller/status/743150786117517312\">here</a>.</p>\n<p>This means that the parent-&gt;child communications are visible in the <code>withComponent</code> calls. For instance here&#39;s the corresponding line from the <code>field</code> component...</p>\n<pre><code><span class=\"hljs-title\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(<span class=\"hljs-type\">Field</span>,<span class=\"hljs-type\">Confirm</span>,'<span class=\"hljs-title\">disabled</span>$')\n</code></pre><p>...showing how <code>Field</code> will pass the <code>disabled$</code> sink as a source to <code>Confirm</code>.</p>\n",
                "files": [{
                    "filename": "app",
                    "suffix": ".js",
                    "size": 479,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">view</span>(<span class=\"hljs-params\">{childsinks:{submit$,DOM}}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> xs.combine(submit$.startWith(<span class=\"hljs-string\">'Steve'</span>),DOM).map(([submission,childvtree])=&gt; div([\n    childvtree,\n    p(<span class=\"hljs-string\">'Submitted value: '</span>+submission)\n  ]))\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: view(sources),\n    instruction$: xs.of(<span class=\"hljs-string\">'Enter name'</span>)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(App,Field,<span class=\"hljs-string\">'instruction$'</span>)",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "app",
                        "suffix": ".ts",
                        "size": 408,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild,EventEmitter,Output} from <span class=\"hljs-string\">'@angular/core'</span>\n<span class=\"hljs-keyword\">import</span> {Field} from <span class=\"hljs-string\">'./field.ts'</span>\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;field instruction=\"Enter name\" (submission)=\"onSubmission($event)\"&gt;&lt;/field&gt;\n    &lt;p&gt;Submitted name: {{submission}}&lt;/p&gt;\n  `</span>,\n  directives: [Field]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> App {\n  submission: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'Steve'</span>\n  onSubmission(txt) {\n    <span class=\"hljs-keyword\">this</span>.submission = txt;\n  }\n}",
                        "others": [{
                            "url": "composition_cycle_comphelper_info.html",
                            "title": "With a composition helper",
                            "framework": "Cycle",
                            "filename": "app",
                            "suffix": ".js",
                            "size": 479,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">view</span>(<span class=\"hljs-params\">{childsinks:{submit$,DOM}}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> xs.combine(submit$.startWith(<span class=\"hljs-string\">'Steve'</span>),DOM).map(([submission,childvtree])=&gt; div([\n    childvtree,\n    p(<span class=\"hljs-string\">'Submitted value: '</span>+submission)\n  ]))\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: view(sources),\n    instruction$: xs.of(<span class=\"hljs-string\">'Enter name'</span>)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(App,Field,<span class=\"hljs-string\">'instruction$'</span>)"
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "app",
                            "suffix": ".js",
                            "size": 405,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n\n<span class=\"hljs-keyword\">let</span> App = React.createClass({\n  getInitialState: ()=&gt; ({submission:<span class=\"hljs-string\">'Steve'</span>}),\n  onSubmission(txt) { <span class=\"hljs-keyword\">this</span>.setState({submission:txt}) },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Field</span> <span class=\"hljs-attr\">instruction</span>=<span class=\"hljs-string\">\"Enter name\"</span> <span class=\"hljs-attr\">onSubmission</span>=<span class=\"hljs-string\">{this.onSubmission}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Submitted value: {this.state.submission}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    )\n  }\n})\n\nexport default App</span>"
                        }]
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "filename": "app",
                        "suffix": ".js",
                        "size": 405,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n\n<span class=\"hljs-keyword\">let</span> App = React.createClass({\n  getInitialState: ()=&gt; ({submission:<span class=\"hljs-string\">'Steve'</span>}),\n  onSubmission(txt) { <span class=\"hljs-keyword\">this</span>.setState({submission:txt}) },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Field</span> <span class=\"hljs-attr\">instruction</span>=<span class=\"hljs-string\">\"Enter name\"</span> <span class=\"hljs-attr\">onSubmission</span>=<span class=\"hljs-string\">{this.onSubmission}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Submitted value: {this.state.submission}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    )\n  }\n})\n\nexport default App</span>"
                    }]
                }, {
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 172,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nrun(App, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 171,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'core-js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> {bootstrap}    from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n<span class=\"hljs-keyword\">import</span> {App} from <span class=\"hljs-string\">'./app.ts'</span>;\nbootstrap(App);\n",
                        "others": [{
                            "url": "composition_cycle_comphelper_info.html",
                            "title": "With a composition helper",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 172,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nrun(App, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 143,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 143,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }]
                }, {
                    "filename": "confirm",
                    "suffix": ".js",
                    "size": 1022,
                    "code": "<span class=\"hljs-keyword\">import</span> {span, button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = sources=&gt; xs.merge(\n  sources.disabled$.map(i=&gt; i ? <span class=\"hljs-string\">'DISABLE'</span> : <span class=\"hljs-string\">'ENABLE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.maybe'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'MAYBE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.cancel'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CANCEL'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.confirm'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CONFIRM'</span>)\n)\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((s,action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'DISABLE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'disabled'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'MAYBE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'confirm'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'ENABLE'</span>: <span class=\"hljs-keyword\">return</span> s === <span class=\"hljs-string\">'disabled'</span> ? <span class=\"hljs-string\">'waiting'</span> : s\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'waiting'</span>\n  }\n},<span class=\"hljs-string\">'disabled'</span>)\n\n<span class=\"hljs-keyword\">const</span> view = state$ =&gt; state$.map(state=&gt; state === <span class=\"hljs-string\">'confirm'</span>\n  ? span([button(<span class=\"hljs-string\">'.confirm'</span>,<span class=\"hljs-string\">'Confirm'</span>),button(<span class=\"hljs-string\">'.cancel'</span>,<span class=\"hljs-string\">'Cancel'</span>)])\n  : button(<span class=\"hljs-string\">'.maybe'</span>,{attrs:{disabled: state === <span class=\"hljs-string\">'disabled'</span>}},<span class=\"hljs-string\">'Submit'</span>)\n)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> sources=&gt; {\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources)  \n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    confirm$: action$.filter(i =&gt; i === <span class=\"hljs-string\">'CONFIRM'</span>)\n  }\n}",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "confirm",
                        "suffix": ".ts",
                        "size": 754,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component,Input,Output,EventEmitter} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'confirm'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;span *ngIf=\"mode !== 'confirm'\"&gt;\n      &lt;button (click)=\"maybe()\" [disabled]=\"mode === 'disabled'\"&gt;Submit&lt;/button&gt;\n    &lt;/span&gt;\n    &lt;span *ngIf=\"mode === 'confirm'\"&gt;\n      &lt;button (click)=\"changedmymind()\"&gt;Cancel&lt;/button&gt;\n      &lt;button (click)=\"yesimsure()\"&gt;Confirm&lt;/button&gt;\n    &lt;/span&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Confirm {\n  mode: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'waiting'</span>\n  @Output() confirm = <span class=\"hljs-keyword\">new</span> EventEmitter&lt;<span class=\"hljs-built_in\">void</span>&gt;()\n  @Input() <span class=\"hljs-keyword\">set</span> disabled(bool: <span class=\"hljs-built_in\">boolean</span>){\n    <span class=\"hljs-keyword\">this</span>.mode = bool ? <span class=\"hljs-string\">'disabled'</span> : <span class=\"hljs-string\">'waiting'</span>\n  }\n  maybe() { <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'confirm'</span> }\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'waiting'</span> }\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.confirm.emit();\n    <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'waiting'</span>\n  }\n}",
                        "others": [{
                            "url": "composition_cycle_comphelper_info.html",
                            "title": "With a composition helper",
                            "framework": "Cycle",
                            "filename": "confirm",
                            "suffix": ".js",
                            "size": 1022,
                            "code": "<span class=\"hljs-keyword\">import</span> {span, button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = sources=&gt; xs.merge(\n  sources.disabled$.map(i=&gt; i ? <span class=\"hljs-string\">'DISABLE'</span> : <span class=\"hljs-string\">'ENABLE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.maybe'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'MAYBE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.cancel'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CANCEL'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.confirm'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CONFIRM'</span>)\n)\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((s,action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'DISABLE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'disabled'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'MAYBE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'confirm'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'ENABLE'</span>: <span class=\"hljs-keyword\">return</span> s === <span class=\"hljs-string\">'disabled'</span> ? <span class=\"hljs-string\">'waiting'</span> : s\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'waiting'</span>\n  }\n},<span class=\"hljs-string\">'disabled'</span>)\n\n<span class=\"hljs-keyword\">const</span> view = state$ =&gt; state$.map(state=&gt; state === <span class=\"hljs-string\">'confirm'</span>\n  ? span([button(<span class=\"hljs-string\">'.confirm'</span>,<span class=\"hljs-string\">'Confirm'</span>),button(<span class=\"hljs-string\">'.cancel'</span>,<span class=\"hljs-string\">'Cancel'</span>)])\n  : button(<span class=\"hljs-string\">'.maybe'</span>,{attrs:{disabled: state === <span class=\"hljs-string\">'disabled'</span>}},<span class=\"hljs-string\">'Submit'</span>)\n)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> sources=&gt; {\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources)  \n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    confirm$: action$.filter(i =&gt; i === <span class=\"hljs-string\">'CONFIRM'</span>)\n  }\n}"
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "confirm",
                            "suffix": ".js",
                            "size": 602,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Confirm = React.createClass({\n  getInitialState: ()=&gt; ({mode:<span class=\"hljs-string\">'waiting'</span>}),\n  maybe() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'confirm'</span>}) },\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>}) },\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.props.confirm();\n    <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>})\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.state.mode !== <span class=\"hljs-string\">'confirm'</span>\n    ? <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.maybe}</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{this.props.disabled}</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n    : <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.changedmymind}</span>&gt;</span>Cancel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.yesimsure}</span>&gt;</span>Confirm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Confirm"
                        }]
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "filename": "confirm",
                        "suffix": ".js",
                        "size": 602,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Confirm = React.createClass({\n  getInitialState: ()=&gt; ({mode:<span class=\"hljs-string\">'waiting'</span>}),\n  maybe() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'confirm'</span>}) },\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>}) },\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.props.confirm();\n    <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>})\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.state.mode !== <span class=\"hljs-string\">'confirm'</span>\n    ? <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.maybe}</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{this.props.disabled}</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n    : <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.changedmymind}</span>&gt;</span>Cancel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.yesimsure}</span>&gt;</span>Confirm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Confirm"
                    }]
                }, {
                    "filename": "extras",
                    "suffix": ".js",
                    "size": 402,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> (parent, child, ...dependencies) =&gt; sources =&gt; {\n  <span class=\"hljs-keyword\">let</span> proxies = dependencies.reduce((proxies,dep)=&gt;({\n    ...proxies,\n    [dep]: xs.create()\n  }),{})\n  <span class=\"hljs-keyword\">const</span> childsinks = child({...sources,...proxies})\n  <span class=\"hljs-keyword\">const</span> sinks = parent({...sources,[<span class=\"hljs-string\">'childsinks'</span>]:childsinks})\n  <span class=\"hljs-built_in\">Object</span>.keys(proxies).forEach(proxy =&gt; proxies[proxy].imitate(sinks[proxy]))\n  <span class=\"hljs-keyword\">return</span> sinks\n}\n",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "missing": true
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "missing": true
                    }]
                }, {
                    "filename": "field",
                    "suffix": ".js",
                    "size": 1408,
                    "code": "<span class=\"hljs-keyword\">import</span> {div, input, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = (DOM,confirm$)=&gt; {\n  <span class=\"hljs-keyword\">const</span> input$ = DOM.select(<span class=\"hljs-string\">'.field'</span>).events(<span class=\"hljs-string\">'input'</span>)\n  <span class=\"hljs-keyword\">const</span> newValue$ = input$\n    .map(e =&gt; ({type:<span class=\"hljs-string\">'INPUT'</span>, data:e.target.value}))\n  <span class=\"hljs-keyword\">const</span> submit$ = input$\n    .map(i=&gt; confirm$.map(s=&gt;({type:<span class=\"hljs-string\">'SUBMIT'</span>, data:i.target.value})))\n    .flatten()\n  <span class=\"hljs-keyword\">return</span> xs.merge(submit$,newValue$)\n}\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((state, action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action.type){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'INPUT'</span>: <span class=\"hljs-keyword\">return</span> {...state, input: action.data}\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'SUBMIT'</span>: <span class=\"hljs-keyword\">return</span> {submission: action.data, input: <span class=\"hljs-string\">''</span>}\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> state\n  }\n}, {submission:<span class=\"hljs-string\">''</span>,input:<span class=\"hljs-string\">''</span>} )\n\n<span class=\"hljs-keyword\">const</span> view = (state$,confirmvtree$,instruction$)=&gt;\n  xs.combine(state$,confirmvtree$,instruction$).map(([state,confirmvtree,instruction])=&gt;\n    div(<span class=\"hljs-string\">'.child'</span>,[\n      instruction+<span class=\"hljs-string\">': '</span>,\n      input(<span class=\"hljs-string\">'.field'</span>, {props:{value: state.input}}),\n      confirmvtree\n    ])\n  )\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Field</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources.DOM, sources.childsinks.confirm$)\n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$, sources.childsinks.DOM, sources.instruction$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    submit$: action$.filter(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span>).map(a=&gt;a.data),\n    disabled$: action$.map(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span> || !a.data)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(Field,Confirm,<span class=\"hljs-string\">'disabled$'</span>)\n",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "field",
                        "suffix": ".ts",
                        "size": 578,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild,EventEmitter,Input,Output} from <span class=\"hljs-string\">'@angular/core'</span>\n<span class=\"hljs-keyword\">import</span> {Confirm} from <span class=\"hljs-string\">'./confirm.ts'</span>\n\n@Component({\n  selector: <span class=\"hljs-string\">'field'</span>,\n  template: <span class=\"hljs-string\">`\n    {{instruction}}: &lt;input #field (input)=\"0\"&gt;\n    &lt;confirm (confirm)=\"onConfirm()\" [disabled]=\"!field.value.length\"&gt;&lt;/confirm&gt;\n  `</span>,\n  directives: [Confirm]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Field {\n  @ViewChild(<span class=\"hljs-string\">'field'</span>) input: <span class=\"hljs-built_in\">any</span>\n  @Input() instruction: <span class=\"hljs-built_in\">string</span>\n  @Output() submission = <span class=\"hljs-keyword\">new</span> EventEmitter&lt;<span class=\"hljs-built_in\">string</span>&gt;()\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.submission.emit(<span class=\"hljs-keyword\">this</span>.input.nativeElement.value)\n    <span class=\"hljs-keyword\">this</span>.input.nativeElement.value = <span class=\"hljs-string\">''</span>\n  }\n}",
                        "others": [{
                            "url": "composition_cycle_comphelper_info.html",
                            "title": "With a composition helper",
                            "framework": "Cycle",
                            "filename": "field",
                            "suffix": ".js",
                            "size": 1408,
                            "code": "<span class=\"hljs-keyword\">import</span> {div, input, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = (DOM,confirm$)=&gt; {\n  <span class=\"hljs-keyword\">const</span> input$ = DOM.select(<span class=\"hljs-string\">'.field'</span>).events(<span class=\"hljs-string\">'input'</span>)\n  <span class=\"hljs-keyword\">const</span> newValue$ = input$\n    .map(e =&gt; ({type:<span class=\"hljs-string\">'INPUT'</span>, data:e.target.value}))\n  <span class=\"hljs-keyword\">const</span> submit$ = input$\n    .map(i=&gt; confirm$.map(s=&gt;({type:<span class=\"hljs-string\">'SUBMIT'</span>, data:i.target.value})))\n    .flatten()\n  <span class=\"hljs-keyword\">return</span> xs.merge(submit$,newValue$)\n}\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((state, action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action.type){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'INPUT'</span>: <span class=\"hljs-keyword\">return</span> {...state, input: action.data}\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'SUBMIT'</span>: <span class=\"hljs-keyword\">return</span> {submission: action.data, input: <span class=\"hljs-string\">''</span>}\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> state\n  }\n}, {submission:<span class=\"hljs-string\">''</span>,input:<span class=\"hljs-string\">''</span>} )\n\n<span class=\"hljs-keyword\">const</span> view = (state$,confirmvtree$,instruction$)=&gt;\n  xs.combine(state$,confirmvtree$,instruction$).map(([state,confirmvtree,instruction])=&gt;\n    div(<span class=\"hljs-string\">'.child'</span>,[\n      instruction+<span class=\"hljs-string\">': '</span>,\n      input(<span class=\"hljs-string\">'.field'</span>, {props:{value: state.input}}),\n      confirmvtree\n    ])\n  )\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Field</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources.DOM, sources.childsinks.confirm$)\n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$, sources.childsinks.DOM, sources.instruction$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    submit$: action$.filter(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span>).map(a=&gt;a.data),\n    disabled$: action$.map(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span> || !a.data)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(Field,Confirm,<span class=\"hljs-string\">'disabled$'</span>)\n"
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "field",
                            "suffix": ".js",
                            "size": 543,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n\n<span class=\"hljs-keyword\">let</span> Field = React.createClass({\n  getInitialState: ()=&gt; ({field:<span class=\"hljs-string\">''</span>}),\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.props.onSubmission(<span class=\"hljs-keyword\">this</span>.state.field);\n    <span class=\"hljs-keyword\">this</span>.setState({field:<span class=\"hljs-string\">''</span>});\n  },\n  onChange(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({field:e.target.value});\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      &lt;div&gt;\n        {this.props.instruction}: &lt;input value={this.state.field} onChange={this.onChange}/&gt;\n        &lt;Confirm disabled={!this.state.field} confirm={this.onConfirm}/&gt;\n      &lt;/div&gt;\n    )\n  }\n})\n\nexport default Field"
                        }]
                    }, {
                        "url": "composition_react_vanilla_info.html",
                        "title": "Vanilla",
                        "framework": "React",
                        "filename": "field",
                        "suffix": ".js",
                        "size": 543,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n\n<span class=\"hljs-keyword\">let</span> Field = React.createClass({\n  getInitialState: ()=&gt; ({field:<span class=\"hljs-string\">''</span>}),\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.props.onSubmission(<span class=\"hljs-keyword\">this</span>.state.field);\n    <span class=\"hljs-keyword\">this</span>.setState({field:<span class=\"hljs-string\">''</span>});\n  },\n  onChange(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({field:e.target.value});\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      &lt;div&gt;\n        {this.props.instruction}: &lt;input value={this.state.field} onChange={this.onChange}/&gt;\n        &lt;Confirm disabled={!this.state.field} confirm={this.onConfirm}/&gt;\n      &lt;/div&gt;\n    )\n  }\n})\n\nexport default Field"
                    }]
                }],
                "bundleSize": 229579,
                "size": 3483,
                "url": "composition_cycle_comphelper_info.html",
                "bundleName": "composition_cycle_comphelper.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/composition/cycle/comphelper"
            }]
        }, {
            "name": "React",
            "folderName": "react",
            "implementations": [{
                "title": "Vanilla",
                "author": "krawaller",
                "maindep": "react",
                "folderName": "vanilla",
                "demoName": "composition",
                "framework": "react",
                "niceFrameworkName": "React",
                "deps": [{
                    "package": "react",
                    "version": "^15.2.0"
                }, {
                    "package": "react-dom",
                    "version": "^15.2.0"
                }],
                "frameworkVersion": "15.2.0",
                "explanation": "<p>No surprises here, this is a vanilla React implementation with no helpers. All components are stateful. I used <code>React.createClass</code> over ES6 classes because of personal preference, no real reasons. </p>\n<p>I opted to have a <a href=\"https://facebook.github.io/react/docs/forms.html#controlled-components\">controlled input</a> for the <code>Field</code> instead of relying on the DOM for storage.</p>\n",
                "files": [{
                    "filename": "app",
                    "suffix": ".js",
                    "size": 405,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n\n<span class=\"hljs-keyword\">let</span> App = React.createClass({\n  getInitialState: ()=&gt; ({submission:<span class=\"hljs-string\">'Steve'</span>}),\n  onSubmission(txt) { <span class=\"hljs-keyword\">this</span>.setState({submission:txt}) },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Field</span> <span class=\"hljs-attr\">instruction</span>=<span class=\"hljs-string\">\"Enter name\"</span> <span class=\"hljs-attr\">onSubmission</span>=<span class=\"hljs-string\">{this.onSubmission}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Submitted value: {this.state.submission}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    )\n  }\n})\n\nexport default App</span>",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "app",
                        "suffix": ".ts",
                        "size": 408,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild,EventEmitter,Output} from <span class=\"hljs-string\">'@angular/core'</span>\n<span class=\"hljs-keyword\">import</span> {Field} from <span class=\"hljs-string\">'./field.ts'</span>\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;field instruction=\"Enter name\" (submission)=\"onSubmission($event)\"&gt;&lt;/field&gt;\n    &lt;p&gt;Submitted name: {{submission}}&lt;/p&gt;\n  `</span>,\n  directives: [Field]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> App {\n  submission: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'Steve'</span>\n  onSubmission(txt) {\n    <span class=\"hljs-keyword\">this</span>.submission = txt;\n  }\n}",
                        "others": [{
                            "url": "composition_cycle_comphelper_info.html",
                            "title": "With a composition helper",
                            "framework": "Cycle",
                            "filename": "app",
                            "suffix": ".js",
                            "size": 479,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">view</span>(<span class=\"hljs-params\">{childsinks:{submit$,DOM}}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> xs.combine(submit$.startWith(<span class=\"hljs-string\">'Steve'</span>),DOM).map(([submission,childvtree])=&gt; div([\n    childvtree,\n    p(<span class=\"hljs-string\">'Submitted value: '</span>+submission)\n  ]))\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: view(sources),\n    instruction$: xs.of(<span class=\"hljs-string\">'Enter name'</span>)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(App,Field,<span class=\"hljs-string\">'instruction$'</span>)"
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "app",
                            "suffix": ".js",
                            "size": 405,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n\n<span class=\"hljs-keyword\">let</span> App = React.createClass({\n  getInitialState: ()=&gt; ({submission:<span class=\"hljs-string\">'Steve'</span>}),\n  onSubmission(txt) { <span class=\"hljs-keyword\">this</span>.setState({submission:txt}) },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Field</span> <span class=\"hljs-attr\">instruction</span>=<span class=\"hljs-string\">\"Enter name\"</span> <span class=\"hljs-attr\">onSubmission</span>=<span class=\"hljs-string\">{this.onSubmission}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Submitted value: {this.state.submission}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    )\n  }\n})\n\nexport default App</span>"
                        }]
                    }, {
                        "url": "composition_cycle_comphelper_info.html",
                        "title": "With a composition helper",
                        "framework": "Cycle",
                        "filename": "app",
                        "suffix": ".js",
                        "size": 479,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">view</span>(<span class=\"hljs-params\">{childsinks:{submit$,DOM}}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> xs.combine(submit$.startWith(<span class=\"hljs-string\">'Steve'</span>),DOM).map(([submission,childvtree])=&gt; div([\n    childvtree,\n    p(<span class=\"hljs-string\">'Submitted value: '</span>+submission)\n  ]))\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: view(sources),\n    instruction$: xs.of(<span class=\"hljs-string\">'Enter name'</span>)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(App,Field,<span class=\"hljs-string\">'instruction$'</span>)",
                        "others": [{
                            "url": "composition_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "app",
                            "suffix": ".ts",
                            "size": 408,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild,EventEmitter,Output} from <span class=\"hljs-string\">'@angular/core'</span>\n<span class=\"hljs-keyword\">import</span> {Field} from <span class=\"hljs-string\">'./field.ts'</span>\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;field instruction=\"Enter name\" (submission)=\"onSubmission($event)\"&gt;&lt;/field&gt;\n    &lt;p&gt;Submitted name: {{submission}}&lt;/p&gt;\n  `</span>,\n  directives: [Field]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> App {\n  submission: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'Steve'</span>\n  onSubmission(txt) {\n    <span class=\"hljs-keyword\">this</span>.submission = txt;\n  }\n}",
                            "others": [{
                                "url": "composition_cycle_comphelper_info.html",
                                "title": "With a composition helper",
                                "framework": "Cycle",
                                "filename": "app",
                                "suffix": ".js",
                                "size": 479,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">view</span>(<span class=\"hljs-params\">{childsinks:{submit$,DOM}}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> xs.combine(submit$.startWith(<span class=\"hljs-string\">'Steve'</span>),DOM).map(([submission,childvtree])=&gt; div([\n    childvtree,\n    p(<span class=\"hljs-string\">'Submitted value: '</span>+submission)\n  ]))\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: view(sources),\n    instruction$: xs.of(<span class=\"hljs-string\">'Enter name'</span>)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(App,Field,<span class=\"hljs-string\">'instruction$'</span>)"
                            }, {
                                "url": "composition_react_vanilla_info.html",
                                "title": "Vanilla",
                                "framework": "React",
                                "filename": "app",
                                "suffix": ".js",
                                "size": 405,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n\n<span class=\"hljs-keyword\">let</span> App = React.createClass({\n  getInitialState: ()=&gt; ({submission:<span class=\"hljs-string\">'Steve'</span>}),\n  onSubmission(txt) { <span class=\"hljs-keyword\">this</span>.setState({submission:txt}) },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Field</span> <span class=\"hljs-attr\">instruction</span>=<span class=\"hljs-string\">\"Enter name\"</span> <span class=\"hljs-attr\">onSubmission</span>=<span class=\"hljs-string\">{this.onSubmission}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Submitted value: {this.state.submission}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    )\n  }\n})\n\nexport default App</span>"
                            }]
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "app",
                            "suffix": ".js",
                            "size": 405,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Field <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./field'</span>\n\n<span class=\"hljs-keyword\">let</span> App = React.createClass({\n  getInitialState: ()=&gt; ({submission:<span class=\"hljs-string\">'Steve'</span>}),\n  onSubmission(txt) { <span class=\"hljs-keyword\">this</span>.setState({submission:txt}) },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Field</span> <span class=\"hljs-attr\">instruction</span>=<span class=\"hljs-string\">\"Enter name\"</span> <span class=\"hljs-attr\">onSubmission</span>=<span class=\"hljs-string\">{this.onSubmission}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Submitted value: {this.state.submission}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    )\n  }\n})\n\nexport default App</span>"
                        }]
                    }]
                }, {
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 143,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 171,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'core-js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> {bootstrap}    from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n<span class=\"hljs-keyword\">import</span> {App} from <span class=\"hljs-string\">'./app.ts'</span>;\nbootstrap(App);\n",
                        "others": [{
                            "url": "composition_cycle_comphelper_info.html",
                            "title": "With a composition helper",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 172,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nrun(App, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 143,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "composition_cycle_comphelper_info.html",
                        "title": "With a composition helper",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 172,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nrun(App, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                        "others": [{
                            "url": "composition_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 171,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'core-js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> {bootstrap}    from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n<span class=\"hljs-keyword\">import</span> {App} from <span class=\"hljs-string\">'./app.ts'</span>;\nbootstrap(App);\n",
                            "others": [{
                                "url": "composition_cycle_comphelper_info.html",
                                "title": "With a composition helper",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 172,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nrun(App, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "composition_react_vanilla_info.html",
                                "title": "Vanilla",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 143,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }]
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 143,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> App <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }]
                }, {
                    "filename": "confirm",
                    "suffix": ".js",
                    "size": 602,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Confirm = React.createClass({\n  getInitialState: ()=&gt; ({mode:<span class=\"hljs-string\">'waiting'</span>}),\n  maybe() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'confirm'</span>}) },\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>}) },\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.props.confirm();\n    <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>})\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.state.mode !== <span class=\"hljs-string\">'confirm'</span>\n    ? <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.maybe}</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{this.props.disabled}</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n    : <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.changedmymind}</span>&gt;</span>Cancel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.yesimsure}</span>&gt;</span>Confirm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Confirm",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "confirm",
                        "suffix": ".ts",
                        "size": 754,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component,Input,Output,EventEmitter} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'confirm'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;span *ngIf=\"mode !== 'confirm'\"&gt;\n      &lt;button (click)=\"maybe()\" [disabled]=\"mode === 'disabled'\"&gt;Submit&lt;/button&gt;\n    &lt;/span&gt;\n    &lt;span *ngIf=\"mode === 'confirm'\"&gt;\n      &lt;button (click)=\"changedmymind()\"&gt;Cancel&lt;/button&gt;\n      &lt;button (click)=\"yesimsure()\"&gt;Confirm&lt;/button&gt;\n    &lt;/span&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Confirm {\n  mode: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'waiting'</span>\n  @Output() confirm = <span class=\"hljs-keyword\">new</span> EventEmitter&lt;<span class=\"hljs-built_in\">void</span>&gt;()\n  @Input() <span class=\"hljs-keyword\">set</span> disabled(bool: <span class=\"hljs-built_in\">boolean</span>){\n    <span class=\"hljs-keyword\">this</span>.mode = bool ? <span class=\"hljs-string\">'disabled'</span> : <span class=\"hljs-string\">'waiting'</span>\n  }\n  maybe() { <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'confirm'</span> }\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'waiting'</span> }\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.confirm.emit();\n    <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'waiting'</span>\n  }\n}",
                        "others": [{
                            "url": "composition_cycle_comphelper_info.html",
                            "title": "With a composition helper",
                            "framework": "Cycle",
                            "filename": "confirm",
                            "suffix": ".js",
                            "size": 1022,
                            "code": "<span class=\"hljs-keyword\">import</span> {span, button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = sources=&gt; xs.merge(\n  sources.disabled$.map(i=&gt; i ? <span class=\"hljs-string\">'DISABLE'</span> : <span class=\"hljs-string\">'ENABLE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.maybe'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'MAYBE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.cancel'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CANCEL'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.confirm'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CONFIRM'</span>)\n)\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((s,action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'DISABLE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'disabled'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'MAYBE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'confirm'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'ENABLE'</span>: <span class=\"hljs-keyword\">return</span> s === <span class=\"hljs-string\">'disabled'</span> ? <span class=\"hljs-string\">'waiting'</span> : s\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'waiting'</span>\n  }\n},<span class=\"hljs-string\">'disabled'</span>)\n\n<span class=\"hljs-keyword\">const</span> view = state$ =&gt; state$.map(state=&gt; state === <span class=\"hljs-string\">'confirm'</span>\n  ? span([button(<span class=\"hljs-string\">'.confirm'</span>,<span class=\"hljs-string\">'Confirm'</span>),button(<span class=\"hljs-string\">'.cancel'</span>,<span class=\"hljs-string\">'Cancel'</span>)])\n  : button(<span class=\"hljs-string\">'.maybe'</span>,{attrs:{disabled: state === <span class=\"hljs-string\">'disabled'</span>}},<span class=\"hljs-string\">'Submit'</span>)\n)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> sources=&gt; {\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources)  \n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    confirm$: action$.filter(i =&gt; i === <span class=\"hljs-string\">'CONFIRM'</span>)\n  }\n}"
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "confirm",
                            "suffix": ".js",
                            "size": 602,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Confirm = React.createClass({\n  getInitialState: ()=&gt; ({mode:<span class=\"hljs-string\">'waiting'</span>}),\n  maybe() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'confirm'</span>}) },\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>}) },\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.props.confirm();\n    <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>})\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.state.mode !== <span class=\"hljs-string\">'confirm'</span>\n    ? <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.maybe}</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{this.props.disabled}</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n    : <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.changedmymind}</span>&gt;</span>Cancel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.yesimsure}</span>&gt;</span>Confirm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Confirm"
                        }]
                    }, {
                        "url": "composition_cycle_comphelper_info.html",
                        "title": "With a composition helper",
                        "framework": "Cycle",
                        "filename": "confirm",
                        "suffix": ".js",
                        "size": 1022,
                        "code": "<span class=\"hljs-keyword\">import</span> {span, button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = sources=&gt; xs.merge(\n  sources.disabled$.map(i=&gt; i ? <span class=\"hljs-string\">'DISABLE'</span> : <span class=\"hljs-string\">'ENABLE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.maybe'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'MAYBE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.cancel'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CANCEL'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.confirm'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CONFIRM'</span>)\n)\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((s,action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'DISABLE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'disabled'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'MAYBE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'confirm'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'ENABLE'</span>: <span class=\"hljs-keyword\">return</span> s === <span class=\"hljs-string\">'disabled'</span> ? <span class=\"hljs-string\">'waiting'</span> : s\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'waiting'</span>\n  }\n},<span class=\"hljs-string\">'disabled'</span>)\n\n<span class=\"hljs-keyword\">const</span> view = state$ =&gt; state$.map(state=&gt; state === <span class=\"hljs-string\">'confirm'</span>\n  ? span([button(<span class=\"hljs-string\">'.confirm'</span>,<span class=\"hljs-string\">'Confirm'</span>),button(<span class=\"hljs-string\">'.cancel'</span>,<span class=\"hljs-string\">'Cancel'</span>)])\n  : button(<span class=\"hljs-string\">'.maybe'</span>,{attrs:{disabled: state === <span class=\"hljs-string\">'disabled'</span>}},<span class=\"hljs-string\">'Submit'</span>)\n)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> sources=&gt; {\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources)  \n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    confirm$: action$.filter(i =&gt; i === <span class=\"hljs-string\">'CONFIRM'</span>)\n  }\n}",
                        "others": [{
                            "url": "composition_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "confirm",
                            "suffix": ".ts",
                            "size": 754,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component,Input,Output,EventEmitter} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'confirm'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;span *ngIf=\"mode !== 'confirm'\"&gt;\n      &lt;button (click)=\"maybe()\" [disabled]=\"mode === 'disabled'\"&gt;Submit&lt;/button&gt;\n    &lt;/span&gt;\n    &lt;span *ngIf=\"mode === 'confirm'\"&gt;\n      &lt;button (click)=\"changedmymind()\"&gt;Cancel&lt;/button&gt;\n      &lt;button (click)=\"yesimsure()\"&gt;Confirm&lt;/button&gt;\n    &lt;/span&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Confirm {\n  mode: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">'waiting'</span>\n  @Output() confirm = <span class=\"hljs-keyword\">new</span> EventEmitter&lt;<span class=\"hljs-built_in\">void</span>&gt;()\n  @Input() <span class=\"hljs-keyword\">set</span> disabled(bool: <span class=\"hljs-built_in\">boolean</span>){\n    <span class=\"hljs-keyword\">this</span>.mode = bool ? <span class=\"hljs-string\">'disabled'</span> : <span class=\"hljs-string\">'waiting'</span>\n  }\n  maybe() { <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'confirm'</span> }\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'waiting'</span> }\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.confirm.emit();\n    <span class=\"hljs-keyword\">this</span>.mode = <span class=\"hljs-string\">'waiting'</span>\n  }\n}",
                            "others": [{
                                "url": "composition_cycle_comphelper_info.html",
                                "title": "With a composition helper",
                                "framework": "Cycle",
                                "filename": "confirm",
                                "suffix": ".js",
                                "size": 1022,
                                "code": "<span class=\"hljs-keyword\">import</span> {span, button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = sources=&gt; xs.merge(\n  sources.disabled$.map(i=&gt; i ? <span class=\"hljs-string\">'DISABLE'</span> : <span class=\"hljs-string\">'ENABLE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.maybe'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'MAYBE'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.cancel'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CANCEL'</span>),\n  sources.DOM.select(<span class=\"hljs-string\">'.confirm'</span>).events(<span class=\"hljs-string\">'click'</span>).map(i=&gt;<span class=\"hljs-string\">'CONFIRM'</span>)\n)\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((s,action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'DISABLE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'disabled'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'MAYBE'</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'confirm'</span>\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'ENABLE'</span>: <span class=\"hljs-keyword\">return</span> s === <span class=\"hljs-string\">'disabled'</span> ? <span class=\"hljs-string\">'waiting'</span> : s\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'waiting'</span>\n  }\n},<span class=\"hljs-string\">'disabled'</span>)\n\n<span class=\"hljs-keyword\">const</span> view = state$ =&gt; state$.map(state=&gt; state === <span class=\"hljs-string\">'confirm'</span>\n  ? span([button(<span class=\"hljs-string\">'.confirm'</span>,<span class=\"hljs-string\">'Confirm'</span>),button(<span class=\"hljs-string\">'.cancel'</span>,<span class=\"hljs-string\">'Cancel'</span>)])\n  : button(<span class=\"hljs-string\">'.maybe'</span>,{attrs:{disabled: state === <span class=\"hljs-string\">'disabled'</span>}},<span class=\"hljs-string\">'Submit'</span>)\n)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> sources=&gt; {\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources)  \n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    confirm$: action$.filter(i =&gt; i === <span class=\"hljs-string\">'CONFIRM'</span>)\n  }\n}"
                            }, {
                                "url": "composition_react_vanilla_info.html",
                                "title": "Vanilla",
                                "framework": "React",
                                "filename": "confirm",
                                "suffix": ".js",
                                "size": 602,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Confirm = React.createClass({\n  getInitialState: ()=&gt; ({mode:<span class=\"hljs-string\">'waiting'</span>}),\n  maybe() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'confirm'</span>}) },\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>}) },\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.props.confirm();\n    <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>})\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.state.mode !== <span class=\"hljs-string\">'confirm'</span>\n    ? <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.maybe}</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{this.props.disabled}</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n    : <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.changedmymind}</span>&gt;</span>Cancel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.yesimsure}</span>&gt;</span>Confirm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Confirm"
                            }]
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "confirm",
                            "suffix": ".js",
                            "size": 602,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Confirm = React.createClass({\n  getInitialState: ()=&gt; ({mode:<span class=\"hljs-string\">'waiting'</span>}),\n  maybe() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'confirm'</span>}) },\n  changedmymind() { <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>}) },\n  yesimsure() {\n    <span class=\"hljs-keyword\">this</span>.props.confirm();\n    <span class=\"hljs-keyword\">this</span>.setState({mode:<span class=\"hljs-string\">'waiting'</span>})\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.state.mode !== <span class=\"hljs-string\">'confirm'</span>\n    ? <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.maybe}</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{this.props.disabled}</span>&gt;</span>Submit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span>\n    : <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.changedmymind}</span>&gt;</span>Cancel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.yesimsure}</span>&gt;</span>Confirm<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Confirm"
                        }]
                    }]
                }, {
                    "filename": "field",
                    "suffix": ".js",
                    "size": 543,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n\n<span class=\"hljs-keyword\">let</span> Field = React.createClass({\n  getInitialState: ()=&gt; ({field:<span class=\"hljs-string\">''</span>}),\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.props.onSubmission(<span class=\"hljs-keyword\">this</span>.state.field);\n    <span class=\"hljs-keyword\">this</span>.setState({field:<span class=\"hljs-string\">''</span>});\n  },\n  onChange(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({field:e.target.value});\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      &lt;div&gt;\n        {this.props.instruction}: &lt;input value={this.state.field} onChange={this.onChange}/&gt;\n        &lt;Confirm disabled={!this.state.field} confirm={this.onConfirm}/&gt;\n      &lt;/div&gt;\n    )\n  }\n})\n\nexport default Field",
                    "others": [{
                        "url": "composition_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "field",
                        "suffix": ".ts",
                        "size": 578,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild,EventEmitter,Input,Output} from <span class=\"hljs-string\">'@angular/core'</span>\n<span class=\"hljs-keyword\">import</span> {Confirm} from <span class=\"hljs-string\">'./confirm.ts'</span>\n\n@Component({\n  selector: <span class=\"hljs-string\">'field'</span>,\n  template: <span class=\"hljs-string\">`\n    {{instruction}}: &lt;input #field (input)=\"0\"&gt;\n    &lt;confirm (confirm)=\"onConfirm()\" [disabled]=\"!field.value.length\"&gt;&lt;/confirm&gt;\n  `</span>,\n  directives: [Confirm]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Field {\n  @ViewChild(<span class=\"hljs-string\">'field'</span>) input: <span class=\"hljs-built_in\">any</span>\n  @Input() instruction: <span class=\"hljs-built_in\">string</span>\n  @Output() submission = <span class=\"hljs-keyword\">new</span> EventEmitter&lt;<span class=\"hljs-built_in\">string</span>&gt;()\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.submission.emit(<span class=\"hljs-keyword\">this</span>.input.nativeElement.value)\n    <span class=\"hljs-keyword\">this</span>.input.nativeElement.value = <span class=\"hljs-string\">''</span>\n  }\n}",
                        "others": [{
                            "url": "composition_cycle_comphelper_info.html",
                            "title": "With a composition helper",
                            "framework": "Cycle",
                            "filename": "field",
                            "suffix": ".js",
                            "size": 1408,
                            "code": "<span class=\"hljs-keyword\">import</span> {div, input, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = (DOM,confirm$)=&gt; {\n  <span class=\"hljs-keyword\">const</span> input$ = DOM.select(<span class=\"hljs-string\">'.field'</span>).events(<span class=\"hljs-string\">'input'</span>)\n  <span class=\"hljs-keyword\">const</span> newValue$ = input$\n    .map(e =&gt; ({type:<span class=\"hljs-string\">'INPUT'</span>, data:e.target.value}))\n  <span class=\"hljs-keyword\">const</span> submit$ = input$\n    .map(i=&gt; confirm$.map(s=&gt;({type:<span class=\"hljs-string\">'SUBMIT'</span>, data:i.target.value})))\n    .flatten()\n  <span class=\"hljs-keyword\">return</span> xs.merge(submit$,newValue$)\n}\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((state, action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action.type){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'INPUT'</span>: <span class=\"hljs-keyword\">return</span> {...state, input: action.data}\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'SUBMIT'</span>: <span class=\"hljs-keyword\">return</span> {submission: action.data, input: <span class=\"hljs-string\">''</span>}\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> state\n  }\n}, {submission:<span class=\"hljs-string\">''</span>,input:<span class=\"hljs-string\">''</span>} )\n\n<span class=\"hljs-keyword\">const</span> view = (state$,confirmvtree$,instruction$)=&gt;\n  xs.combine(state$,confirmvtree$,instruction$).map(([state,confirmvtree,instruction])=&gt;\n    div(<span class=\"hljs-string\">'.child'</span>,[\n      instruction+<span class=\"hljs-string\">': '</span>,\n      input(<span class=\"hljs-string\">'.field'</span>, {props:{value: state.input}}),\n      confirmvtree\n    ])\n  )\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Field</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources.DOM, sources.childsinks.confirm$)\n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$, sources.childsinks.DOM, sources.instruction$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    submit$: action$.filter(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span>).map(a=&gt;a.data),\n    disabled$: action$.map(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span> || !a.data)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(Field,Confirm,<span class=\"hljs-string\">'disabled$'</span>)\n"
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "field",
                            "suffix": ".js",
                            "size": 543,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n\n<span class=\"hljs-keyword\">let</span> Field = React.createClass({\n  getInitialState: ()=&gt; ({field:<span class=\"hljs-string\">''</span>}),\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.props.onSubmission(<span class=\"hljs-keyword\">this</span>.state.field);\n    <span class=\"hljs-keyword\">this</span>.setState({field:<span class=\"hljs-string\">''</span>});\n  },\n  onChange(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({field:e.target.value});\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      &lt;div&gt;\n        {this.props.instruction}: &lt;input value={this.state.field} onChange={this.onChange}/&gt;\n        &lt;Confirm disabled={!this.state.field} confirm={this.onConfirm}/&gt;\n      &lt;/div&gt;\n    )\n  }\n})\n\nexport default Field"
                        }]
                    }, {
                        "url": "composition_cycle_comphelper_info.html",
                        "title": "With a composition helper",
                        "framework": "Cycle",
                        "filename": "field",
                        "suffix": ".js",
                        "size": 1408,
                        "code": "<span class=\"hljs-keyword\">import</span> {div, input, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = (DOM,confirm$)=&gt; {\n  <span class=\"hljs-keyword\">const</span> input$ = DOM.select(<span class=\"hljs-string\">'.field'</span>).events(<span class=\"hljs-string\">'input'</span>)\n  <span class=\"hljs-keyword\">const</span> newValue$ = input$\n    .map(e =&gt; ({type:<span class=\"hljs-string\">'INPUT'</span>, data:e.target.value}))\n  <span class=\"hljs-keyword\">const</span> submit$ = input$\n    .map(i=&gt; confirm$.map(s=&gt;({type:<span class=\"hljs-string\">'SUBMIT'</span>, data:i.target.value})))\n    .flatten()\n  <span class=\"hljs-keyword\">return</span> xs.merge(submit$,newValue$)\n}\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((state, action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action.type){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'INPUT'</span>: <span class=\"hljs-keyword\">return</span> {...state, input: action.data}\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'SUBMIT'</span>: <span class=\"hljs-keyword\">return</span> {submission: action.data, input: <span class=\"hljs-string\">''</span>}\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> state\n  }\n}, {submission:<span class=\"hljs-string\">''</span>,input:<span class=\"hljs-string\">''</span>} )\n\n<span class=\"hljs-keyword\">const</span> view = (state$,confirmvtree$,instruction$)=&gt;\n  xs.combine(state$,confirmvtree$,instruction$).map(([state,confirmvtree,instruction])=&gt;\n    div(<span class=\"hljs-string\">'.child'</span>,[\n      instruction+<span class=\"hljs-string\">': '</span>,\n      input(<span class=\"hljs-string\">'.field'</span>, {props:{value: state.input}}),\n      confirmvtree\n    ])\n  )\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Field</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources.DOM, sources.childsinks.confirm$)\n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$, sources.childsinks.DOM, sources.instruction$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    submit$: action$.filter(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span>).map(a=&gt;a.data),\n    disabled$: action$.map(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span> || !a.data)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(Field,Confirm,<span class=\"hljs-string\">'disabled$'</span>)\n",
                        "others": [{
                            "url": "composition_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "field",
                            "suffix": ".ts",
                            "size": 578,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild,EventEmitter,Input,Output} from <span class=\"hljs-string\">'@angular/core'</span>\n<span class=\"hljs-keyword\">import</span> {Confirm} from <span class=\"hljs-string\">'./confirm.ts'</span>\n\n@Component({\n  selector: <span class=\"hljs-string\">'field'</span>,\n  template: <span class=\"hljs-string\">`\n    {{instruction}}: &lt;input #field (input)=\"0\"&gt;\n    &lt;confirm (confirm)=\"onConfirm()\" [disabled]=\"!field.value.length\"&gt;&lt;/confirm&gt;\n  `</span>,\n  directives: [Confirm]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Field {\n  @ViewChild(<span class=\"hljs-string\">'field'</span>) input: <span class=\"hljs-built_in\">any</span>\n  @Input() instruction: <span class=\"hljs-built_in\">string</span>\n  @Output() submission = <span class=\"hljs-keyword\">new</span> EventEmitter&lt;<span class=\"hljs-built_in\">string</span>&gt;()\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.submission.emit(<span class=\"hljs-keyword\">this</span>.input.nativeElement.value)\n    <span class=\"hljs-keyword\">this</span>.input.nativeElement.value = <span class=\"hljs-string\">''</span>\n  }\n}",
                            "others": [{
                                "url": "composition_cycle_comphelper_info.html",
                                "title": "With a composition helper",
                                "framework": "Cycle",
                                "filename": "field",
                                "suffix": ".js",
                                "size": 1408,
                                "code": "<span class=\"hljs-keyword\">import</span> {div, input, p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> withComponent <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">const</span> intent = (DOM,confirm$)=&gt; {\n  <span class=\"hljs-keyword\">const</span> input$ = DOM.select(<span class=\"hljs-string\">'.field'</span>).events(<span class=\"hljs-string\">'input'</span>)\n  <span class=\"hljs-keyword\">const</span> newValue$ = input$\n    .map(e =&gt; ({type:<span class=\"hljs-string\">'INPUT'</span>, data:e.target.value}))\n  <span class=\"hljs-keyword\">const</span> submit$ = input$\n    .map(i=&gt; confirm$.map(s=&gt;({type:<span class=\"hljs-string\">'SUBMIT'</span>, data:i.target.value})))\n    .flatten()\n  <span class=\"hljs-keyword\">return</span> xs.merge(submit$,newValue$)\n}\n\n<span class=\"hljs-keyword\">const</span> model = action$ =&gt; action$.fold((state, action)=&gt; {\n  <span class=\"hljs-keyword\">switch</span>(action.type){\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'INPUT'</span>: <span class=\"hljs-keyword\">return</span> {...state, input: action.data}\n    <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'SUBMIT'</span>: <span class=\"hljs-keyword\">return</span> {submission: action.data, input: <span class=\"hljs-string\">''</span>}\n    <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> state\n  }\n}, {submission:<span class=\"hljs-string\">''</span>,input:<span class=\"hljs-string\">''</span>} )\n\n<span class=\"hljs-keyword\">const</span> view = (state$,confirmvtree$,instruction$)=&gt;\n  xs.combine(state$,confirmvtree$,instruction$).map(([state,confirmvtree,instruction])=&gt;\n    div(<span class=\"hljs-string\">'.child'</span>,[\n      instruction+<span class=\"hljs-string\">': '</span>,\n      input(<span class=\"hljs-string\">'.field'</span>, {props:{value: state.input}}),\n      confirmvtree\n    ])\n  )\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Field</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> action$ = intent(sources.DOM, sources.childsinks.confirm$)\n  <span class=\"hljs-keyword\">const</span> state$ = model(action$)\n  <span class=\"hljs-keyword\">const</span> vtree$ = view(state$, sources.childsinks.DOM, sources.instruction$)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: vtree$,\n    submit$: action$.filter(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span>).map(a=&gt;a.data),\n    disabled$: action$.map(a =&gt; a.type === <span class=\"hljs-string\">'SUBMIT'</span> || !a.data)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> withComponent(Field,Confirm,<span class=\"hljs-string\">'disabled$'</span>)\n"
                            }, {
                                "url": "composition_react_vanilla_info.html",
                                "title": "Vanilla",
                                "framework": "React",
                                "filename": "field",
                                "suffix": ".js",
                                "size": 543,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n\n<span class=\"hljs-keyword\">let</span> Field = React.createClass({\n  getInitialState: ()=&gt; ({field:<span class=\"hljs-string\">''</span>}),\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.props.onSubmission(<span class=\"hljs-keyword\">this</span>.state.field);\n    <span class=\"hljs-keyword\">this</span>.setState({field:<span class=\"hljs-string\">''</span>});\n  },\n  onChange(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({field:e.target.value});\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      &lt;div&gt;\n        {this.props.instruction}: &lt;input value={this.state.field} onChange={this.onChange}/&gt;\n        &lt;Confirm disabled={!this.state.field} confirm={this.onConfirm}/&gt;\n      &lt;/div&gt;\n    )\n  }\n})\n\nexport default Field"
                            }]
                        }, {
                            "url": "composition_react_vanilla_info.html",
                            "title": "Vanilla",
                            "framework": "React",
                            "filename": "field",
                            "suffix": ".js",
                            "size": 543,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> Confirm <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./confirm'</span>\n\n<span class=\"hljs-keyword\">let</span> Field = React.createClass({\n  getInitialState: ()=&gt; ({field:<span class=\"hljs-string\">''</span>}),\n  onConfirm() {\n    <span class=\"hljs-keyword\">this</span>.props.onSubmission(<span class=\"hljs-keyword\">this</span>.state.field);\n    <span class=\"hljs-keyword\">this</span>.setState({field:<span class=\"hljs-string\">''</span>});\n  },\n  onChange(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({field:e.target.value});\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> (\n      &lt;div&gt;\n        {this.props.instruction}: &lt;input value={this.state.field} onChange={this.onChange}/&gt;\n        &lt;Confirm disabled={!this.state.field} confirm={this.onConfirm}/&gt;\n      &lt;/div&gt;\n    )\n  }\n})\n\nexport default Field"
                        }]
                    }]
                }],
                "bundleSize": 726780,
                "size": 1693,
                "url": "composition_react_vanilla_info.html",
                "bundleName": "composition_react_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/composition/react/vanilla"
            }]
        }],
        "filenames": ["app", "bootstrap", "confirm", "field", "extras"],
        "description": "<p>This shows off how to do compositions yada blah</p>\n<p><img src=\"../images/components.svg\" alt=\"\"></p>\n",
        "icount": 3,
        "folderName": "composition",
        "name": "Composition",
        "summary": "How to do composition"
    }, {
        "frameworks": [{
            "name": "Angular2",
            "folderName": "angular2",
            "implementations": [{
                "title": "TypeScript",
                "author": "krawaller",
                "language": "typescript",
                "maindep": "@angular/core",
                "folderName": "vanilla",
                "demoName": "interval",
                "framework": "angular2",
                "niceFrameworkName": "Angular2",
                "deps": [{
                    "package": "@angular/common",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/compiler",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/core",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/platform-browser",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/platform-browser-dynamic",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "reflect-metadata",
                    "version": "^0.1.8"
                }, {
                    "package": "rxjs",
                    "version": "^5.0.0-beta.11"
                }, {
                    "package": "zone.js",
                    "version": "^0.6.17"
                }],
                "frameworkVersion": "2.0.0-rc.6",
                "explanation": "<p>This is an idiomatic Angular 2 solution using TypeScript. No surprises.</p>\n<p>We start the interval in the <code>ngAfterViewInit</code> lifecycle hook.</p>\n<p>The computed property is implemented as a getter.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".ts",
                    "size": 546,
                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                    "others": [{
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 261,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 181,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 131,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 110,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                    }]
                }, {
                    "filename": "singer",
                    "suffix": ".ts",
                    "size": 407,
                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                    "others": [{
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 243,
                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 334,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 404,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 365,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                    }]
                }],
                "bundleSize": 1756110,
                "size": 953,
                "url": "interval_angular2_vanilla_info.html",
                "bundleName": "interval_angular2_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/interval/angular2/vanilla"
            }]
        }, {
            "name": "Cycle",
            "folderName": "cycle",
            "implementations": [{
                "title": "xstream and lyricsdriver",
                "author": "krawaller",
                "maindep": "@cycle/dom",
                "folderName": "lyricsdriver",
                "demoName": "interval",
                "framework": "cycle",
                "niceFrameworkName": "Cycle",
                "deps": [{
                    "package": "@cycle/dom",
                    "version": "^12.2.2"
                }, {
                    "package": "@cycle/xstream-run",
                    "version": "^3.1.0"
                }, {
                    "package": "xstream",
                    "version": "^6.2.0"
                }],
                "frameworkVersion": "12.2.2",
                "explanation": "<p>In this implementation we&#39;ve opted to delegate the position pushing to an interval driver.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 261,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 546,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 181,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 131,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 110,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                    }]
                }, {
                    "filename": "extras",
                    "suffix": ".js",
                    "size": 174,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">const</span> makeIntervalDriver = (ceil,interval)=&gt; ()=&gt; {\n  <span class=\"hljs-keyword\">return</span> xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;(n+<span class=\"hljs-number\">1</span>)%ceil)\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> makeIntervalDriver",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "missing": true
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "missing": true
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "missing": true
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "missing": true
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "missing": true
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "missing": true
                    }]
                }, {
                    "filename": "singer",
                    "suffix": ".js",
                    "size": 243,
                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "singer",
                        "suffix": ".ts",
                        "size": 407,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 334,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 404,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 365,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                    }]
                }],
                "bundleSize": 271678,
                "size": 678,
                "url": "interval_cycle_lyricsdriver_info.html",
                "bundleName": "interval_cycle_lyricsdriver.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/interval/cycle/lyricsdriver"
            }, {
                "title": "xstream",
                "author": "krawaller",
                "maindep": "@cycle/dom",
                "folderName": "vanilla",
                "demoName": "interval",
                "framework": "cycle",
                "niceFrameworkName": "Cycle",
                "deps": [{
                    "package": "@cycle/dom",
                    "version": "^12.2.2"
                }, {
                    "package": "@cycle/xstream-run",
                    "version": "^3.1.0"
                }, {
                    "package": "xstream",
                    "version": "^6.2.0"
                }],
                "frameworkVersion": "12.2.2",
                "explanation": "<p>CycleJS of course lends itself very well to the given task, as the interval is a stream and streams are what Cycle does.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 181,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 546,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 261,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 131,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 110,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                    }]
                }, {
                    "filename": "singer",
                    "suffix": ".js",
                    "size": 334,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "singer",
                        "suffix": ".ts",
                        "size": 407,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 243,
                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 404,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 365,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                    }]
                }],
                "bundleSize": 271210,
                "size": 515,
                "url": "interval_cycle_vanilla_info.html",
                "bundleName": "interval_cycle_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/interval/cycle/vanilla"
            }]
        }, {
            "name": "Preact",
            "folderName": "preact",
            "implementations": [{
                "title": "Straightforward Preact",
                "author": "krawaller",
                "maindep": "preact",
                "folderName": "vanilla",
                "demoName": "interval",
                "framework": "preact",
                "niceFrameworkName": "Preact",
                "deps": [{
                    "package": "preact",
                    "version": "^5.7.0"
                }],
                "frameworkVersion": "5.7.0",
                "explanation": "<p>No surprises here, this is a vanilla Preact implementation.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 131,
                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 546,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 261,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 181,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 110,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                    }]
                }, {
                    "filename": "singer",
                    "suffix": ".js",
                    "size": 404,
                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "singer",
                        "suffix": ".ts",
                        "size": 407,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 243,
                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 334,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 365,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                    }]
                }],
                "bundleSize": 29823,
                "size": 535,
                "url": "interval_preact_vanilla_info.html",
                "bundleName": "interval_preact_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/interval/preact/vanilla"
            }]
        }, {
            "name": "React",
            "folderName": "react",
            "implementations": [{
                "title": "es6 class",
                "author": "krawaller",
                "maindep": "react",
                "folderName": "es6",
                "demoName": "interval",
                "framework": "react",
                "niceFrameworkName": "React",
                "deps": [{
                    "package": "react",
                    "version": "^15.3.1"
                }, {
                    "package": "react-dom",
                    "version": "^15.3.1"
                }],
                "frameworkVersion": "15.3.1",
                "explanation": "<p>In this implementation I use an ES6 class. Note how, when compared to the <code>createClass</code>, the <code>getInitialState</code> and <code>componentDidMount</code> methods are both replaced by the <code>constructor</code>.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 152,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 546,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 261,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 181,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 131,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 110,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                    }]
                }, {
                    "filename": "singer",
                    "suffix": ".js",
                    "size": 385,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "singer",
                        "suffix": ".ts",
                        "size": 407,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 243,
                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 334,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 404,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 365,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                    }]
                }],
                "bundleSize": 741140,
                "size": 537,
                "url": "interval_react_es6_info.html",
                "bundleName": "interval_react_es6.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/interval/react/es6"
            }, {
                "title": "Straightforward React",
                "author": "krawaller",
                "maindep": "react",
                "folderName": "vanilla",
                "demoName": "interval",
                "framework": "react",
                "niceFrameworkName": "React",
                "deps": [{
                    "package": "react",
                    "version": "^15.3.1"
                }, {
                    "package": "react-dom",
                    "version": "^15.3.1"
                }],
                "frameworkVersion": "15.3.1",
                "explanation": "<p>No surprises here, this is a vanilla React implementation.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 152,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 546,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 261,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 181,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 131,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "bootstrap",
                                        "suffix": ".ts",
                                        "size": 546,
                                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 261,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 181,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 131,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 110,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 110,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                    }]
                }, {
                    "filename": "singer",
                    "suffix": ".js",
                    "size": 385,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "singer",
                        "suffix": ".ts",
                        "size": 407,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 243,
                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 334,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 404,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "singer",
                                        "suffix": ".ts",
                                        "size": 407,
                                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 243,
                                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 334,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 404,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 365,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_vue_vanilla_info.html",
                        "title": "Straightforward Vue",
                        "framework": "Vue",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 365,
                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                    }]
                }],
                "bundleSize": 739480,
                "size": 537,
                "url": "interval_react_vanilla_info.html",
                "bundleName": "interval_react_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/interval/react/vanilla"
            }]
        }, {
            "name": "Vue",
            "folderName": "vue",
            "implementations": [{
                "title": "Straightforward Vue",
                "author": "krawaller",
                "maindep": "vue",
                "folderName": "vanilla",
                "demoName": "interval",
                "framework": "vue",
                "niceFrameworkName": "Vue",
                "deps": [{
                    "package": "vue",
                    "version": "^1.0.26"
                }],
                "frameworkVersion": "1.0.26",
                "explanation": "<p>No surprises here, this is a vanilla Vue implementation.</p>\n<p>The <code>attached</code> method is a lifecycle hook that is called after the node has been attached.</p>\n<p>Note how Vue is very explicit about the computed properties, declaring them separately.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 110,
                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 546,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 261,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 181,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 131,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "bootstrap",
                                        "suffix": ".ts",
                                        "size": 546,
                                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 261,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 181,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 131,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 110,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 152,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 546,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 261,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 181,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 131,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "bootstrap",
                                        "suffix": ".ts",
                                        "size": 546,
                                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 261,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 181,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 131,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 110,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 152,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 546,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 261,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 181,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "bootstrap",
                                        "suffix": ".ts",
                                        "size": 546,
                                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 261,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 181,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 131,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 110,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 131,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 131,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "bootstrap",
                                    "suffix": ".ts",
                                    "size": 546,
                                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 261,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "bootstrap",
                                        "suffix": ".ts",
                                        "size": 546,
                                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 261,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 181,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 131,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 110,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 181,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 181,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "bootstrap",
                                        "suffix": ".ts",
                                        "size": 546,
                                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 261,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 181,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 131,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 110,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 261,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});",
                                        "others": [{
                                            "url": "interval_angular2_vanilla_info.html",
                                            "title": "TypeScript",
                                            "framework": "Angular2",
                                            "filename": "bootstrap",
                                            "suffix": ".ts",
                                            "size": 546,
                                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Singer } from <span class=\"hljs-string\">'./singer.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;singer&gt;&lt;/singer&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Singer,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                            "others": [{
                                                "url": "interval_cycle_lyricsdriver_info.html",
                                                "title": "xstream and lyricsdriver",
                                                "framework": "Cycle",
                                                "filename": "bootstrap",
                                                "suffix": ".js",
                                                "size": 261,
                                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeIntervalDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  pos$: makeIntervalDriver(<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1500</span>)\n});"
                                            }, {
                                                "url": "interval_cycle_vanilla_info.html",
                                                "title": "xstream",
                                                "framework": "Cycle",
                                                "filename": "bootstrap",
                                                "suffix": ".js",
                                                "size": 181,
                                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                            }, {
                                                "url": "interval_preact_vanilla_info.html",
                                                "title": "Straightforward Preact",
                                                "framework": "Preact",
                                                "filename": "bootstrap",
                                                "suffix": ".js",
                                                "size": 131,
                                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                            }, {
                                                "url": "interval_react_es6_info.html",
                                                "title": "es6 class",
                                                "framework": "React",
                                                "filename": "bootstrap",
                                                "suffix": ".js",
                                                "size": 152,
                                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                            }, {
                                                "url": "interval_react_vanilla_info.html",
                                                "title": "Straightforward React",
                                                "framework": "React",
                                                "filename": "bootstrap",
                                                "suffix": ".js",
                                                "size": 152,
                                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                            }, {
                                                "url": "interval_vue_vanilla_info.html",
                                                "title": "Straightforward Vue",
                                                "framework": "Vue",
                                                "filename": "bootstrap",
                                                "suffix": ".js",
                                                "size": 110,
                                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                            }]
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 181,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrun(Singer, { DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>) });"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 131,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 152,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "bootstrap",
                                            "suffix": ".js",
                                            "size": 110,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                        }]
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 131,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>));"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 152,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "bootstrap",
                                        "suffix": ".js",
                                        "size": 110,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                    }]
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 152,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 110,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                                }]
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 152,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Singer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./singer'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Singer</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 110,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                            }]
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 110,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./singer'</span>\n\n<span class=\"hljs-keyword\">new</span> Vue({\n  template: <span class=\"hljs-string\">'&lt;singer/&gt;'</span>,\n  replace: <span class=\"hljs-literal\">false</span>,\n  el: <span class=\"hljs-string\">'#app'</span>\n})"
                        }]
                    }]
                }, {
                    "filename": "singer",
                    "suffix": ".js",
                    "size": 365,
                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})",
                    "others": [{
                        "url": "interval_angular2_vanilla_info.html",
                        "title": "TypeScript",
                        "framework": "Angular2",
                        "filename": "singer",
                        "suffix": ".ts",
                        "size": 407,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                        "others": [{
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_lyricsdriver_info.html",
                        "title": "xstream and lyricsdriver",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 243,
                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_cycle_vanilla_info.html",
                        "title": "xstream",
                        "framework": "Cycle",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 334,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_preact_vanilla_info.html",
                        "title": "Straightforward Preact",
                        "framework": "Preact",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 404,
                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_react_es6_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "singer",
                                        "suffix": ".ts",
                                        "size": 407,
                                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 243,
                                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 334,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 404,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 365,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }, {
                        "url": "interval_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "singer",
                        "suffix": ".js",
                        "size": 385,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                        "others": [{
                            "url": "interval_angular2_vanilla_info.html",
                            "title": "TypeScript",
                            "framework": "Angular2",
                            "filename": "singer",
                            "suffix": ".ts",
                            "size": 407,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                            "others": [{
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_lyricsdriver_info.html",
                            "title": "xstream and lyricsdriver",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 243,
                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_cycle_vanilla_info.html",
                            "title": "xstream",
                            "framework": "Cycle",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 334,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_preact_vanilla_info.html",
                            "title": "Straightforward Preact",
                            "framework": "Preact",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 404,
                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "singer",
                                        "suffix": ".ts",
                                        "size": 407,
                                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 243,
                                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 334,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 404,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 365,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_react_es6_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_react_es6_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 385,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                            "others": [{
                                "url": "interval_angular2_vanilla_info.html",
                                "title": "TypeScript",
                                "framework": "Angular2",
                                "filename": "singer",
                                "suffix": ".ts",
                                "size": 407,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                "others": [{
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_lyricsdriver_info.html",
                                "title": "xstream and lyricsdriver",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 243,
                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_cycle_vanilla_info.html",
                                "title": "xstream",
                                "framework": "Cycle",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 334,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "singer",
                                        "suffix": ".ts",
                                        "size": 407,
                                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 243,
                                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 334,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 404,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 365,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_preact_vanilla_info.html",
                                    "title": "Straightforward Preact",
                                    "framework": "Preact",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 404,
                                    "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_preact_vanilla_info.html",
                                "title": "Straightforward Preact",
                                "framework": "Preact",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 404,
                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                "others": [{
                                    "url": "interval_angular2_vanilla_info.html",
                                    "title": "TypeScript",
                                    "framework": "Angular2",
                                    "filename": "singer",
                                    "suffix": ".ts",
                                    "size": 407,
                                    "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                    "others": [{
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_lyricsdriver_info.html",
                                    "title": "xstream and lyricsdriver",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 243,
                                    "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "singer",
                                        "suffix": ".ts",
                                        "size": 407,
                                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 243,
                                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 334,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 404,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 365,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_vanilla_info.html",
                                        "title": "xstream",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 334,
                                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_cycle_vanilla_info.html",
                                    "title": "xstream",
                                    "framework": "Cycle",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 334,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                    "others": [{
                                        "url": "interval_angular2_vanilla_info.html",
                                        "title": "TypeScript",
                                        "framework": "Angular2",
                                        "filename": "singer",
                                        "suffix": ".ts",
                                        "size": 407,
                                        "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                        "others": [{
                                            "url": "interval_cycle_lyricsdriver_info.html",
                                            "title": "xstream and lyricsdriver",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 243,
                                            "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 334,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 404,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 365,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                        }]
                                    }, {
                                        "url": "interval_cycle_lyricsdriver_info.html",
                                        "title": "xstream and lyricsdriver",
                                        "framework": "Cycle",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 243,
                                        "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer",
                                        "others": [{
                                            "url": "interval_angular2_vanilla_info.html",
                                            "title": "TypeScript",
                                            "framework": "Angular2",
                                            "filename": "singer",
                                            "suffix": ".ts",
                                            "size": 407,
                                            "code": "<span class=\"hljs-keyword\">import</span> {Component, AfterViewInit} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n@Component({\n  selector: <span class=\"hljs-string\">'singer'</span>,\n  template: <span class=\"hljs-string\">`{{line}}`</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Singer <span class=\"hljs-keyword\">implements</span> AfterViewInit {\n  pos = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">get</span> line() {\n    <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n  }\n  ngAfterViewInit() {\n    setInterval(()=&gt; <span class=\"hljs-keyword\">this</span>.pos = (<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1500</span>)\n  }\n}\n",
                                            "others": [{
                                                "url": "interval_cycle_lyricsdriver_info.html",
                                                "title": "xstream and lyricsdriver",
                                                "framework": "Cycle",
                                                "filename": "singer",
                                                "suffix": ".js",
                                                "size": 243,
                                                "code": "<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">{pos$}</span>)</span>{\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: pos$.map(pos =&gt; div(lyrics[pos]))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                            }, {
                                                "url": "interval_cycle_vanilla_info.html",
                                                "title": "xstream",
                                                "framework": "Cycle",
                                                "filename": "singer",
                                                "suffix": ".js",
                                                "size": 334,
                                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                            }, {
                                                "url": "interval_preact_vanilla_info.html",
                                                "title": "Straightforward Preact",
                                                "framework": "Preact",
                                                "filename": "singer",
                                                "suffix": ".js",
                                                "size": 404,
                                                "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                            }, {
                                                "url": "interval_react_es6_info.html",
                                                "title": "es6 class",
                                                "framework": "React",
                                                "filename": "singer",
                                                "suffix": ".js",
                                                "size": 385,
                                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                            }, {
                                                "url": "interval_react_vanilla_info.html",
                                                "title": "Straightforward React",
                                                "framework": "React",
                                                "filename": "singer",
                                                "suffix": ".js",
                                                "size": 385,
                                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                            }, {
                                                "url": "interval_vue_vanilla_info.html",
                                                "title": "Straightforward Vue",
                                                "framework": "Vue",
                                                "filename": "singer",
                                                "suffix": ".js",
                                                "size": 365,
                                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                            }]
                                        }, {
                                            "url": "interval_cycle_vanilla_info.html",
                                            "title": "xstream",
                                            "framework": "Cycle",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 334,
                                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Singer</span>(<span class=\"hljs-params\">sources</span>)</span>{\n  <span class=\"hljs-keyword\">let</span> song$ = xs.periodic(<span class=\"hljs-number\">1500</span>).startWith(<span class=\"hljs-number\">-1</span>).map(n=&gt;lyrics[(n+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>])\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: song$.map(line =&gt; div(line))\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_preact_vanilla_info.html",
                                            "title": "Straightforward Preact",
                                            "framework": "Preact",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 404,
                                            "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_es6_info.html",
                                            "title": "es6 class",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_react_vanilla_info.html",
                                            "title": "Straightforward React",
                                            "framework": "React",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 385,
                                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                        }, {
                                            "url": "interval_vue_vanilla_info.html",
                                            "title": "Straightforward Vue",
                                            "framework": "Vue",
                                            "filename": "singer",
                                            "suffix": ".js",
                                            "size": 365,
                                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                        }]
                                    }, {
                                        "url": "interval_preact_vanilla_info.html",
                                        "title": "Straightforward Preact",
                                        "framework": "Preact",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 404,
                                        "code": "<span class=\"hljs-comment\">/** @jsx h */</span>\n<span class=\"hljs-keyword\">import</span> { h, Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'preact'</span>;\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state.pos = <span class=\"hljs-number\">0</span>\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_es6_info.html",
                                        "title": "es6 class",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_react_vanilla_info.html",
                                        "title": "Straightforward React",
                                        "framework": "React",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 385,
                                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                    }, {
                                        "url": "interval_vue_vanilla_info.html",
                                        "title": "Straightforward Vue",
                                        "framework": "Vue",
                                        "filename": "singer",
                                        "suffix": ".js",
                                        "size": 365,
                                        "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                    }]
                                }, {
                                    "url": "interval_react_es6_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singer</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {pos:<span class=\"hljs-number\">0</span>}\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_react_vanilla_info.html",
                                    "title": "Straightforward React",
                                    "framework": "React",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 385,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                                }, {
                                    "url": "interval_vue_vanilla_info.html",
                                    "title": "Straightforward Vue",
                                    "framework": "Vue",
                                    "filename": "singer",
                                    "suffix": ".js",
                                    "size": 365,
                                    "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                                }]
                            }, {
                                "url": "interval_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 385,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Singer = React.createClass({\n  getInitialState: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  componentDidMount() {\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.setState({pos:(<span class=\"hljs-keyword\">this</span>.state.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>}), <span class=\"hljs-number\">1500</span>)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{lyrics[this.state.pos]}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Singer"
                            }, {
                                "url": "interval_vue_vanilla_info.html",
                                "title": "Straightforward Vue",
                                "framework": "Vue",
                                "filename": "singer",
                                "suffix": ".js",
                                "size": 365,
                                "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                            }]
                        }, {
                            "url": "interval_vue_vanilla_info.html",
                            "title": "Straightforward Vue",
                            "framework": "Vue",
                            "filename": "singer",
                            "suffix": ".js",
                            "size": 365,
                            "code": "<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n\n<span class=\"hljs-keyword\">let</span> lyrics = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n\nVue.component(<span class=\"hljs-string\">'singer'</span>,{\n  template: <span class=\"hljs-string\">`&lt;p&gt;{{line}}&lt;/p&gt;`</span>,\n  data: ()=&gt; ({pos:<span class=\"hljs-number\">0</span>}),\n  computed: {\n    line() {\n      <span class=\"hljs-keyword\">return</span> lyrics[<span class=\"hljs-keyword\">this</span>.pos]\n    }\n  },\n  attached: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">arg</span>)</span>{\n    setInterval(()=&gt;<span class=\"hljs-keyword\">this</span>.$set(<span class=\"hljs-string\">\"pos\"</span>,(<span class=\"hljs-keyword\">this</span>.pos+<span class=\"hljs-number\">1</span>)%<span class=\"hljs-number\">4</span>),<span class=\"hljs-number\">1500</span>)\n  }\n})"
                        }]
                    }]
                }],
                "bundleSize": 272609,
                "size": 475,
                "url": "interval_vue_vanilla_info.html",
                "bundleName": "interval_vue_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/interval/vue/vanilla"
            }]
        }],
        "filenames": ["bootstrap", "singer", "extras"],
        "description": "<p>This is a simple hello-worldish demo, where we declare a single component that loops through the lyrics of a song:</p>\n<pre><code><span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">lyrics</span> = [<span class=\"hljs-string\">\"Eeexiiit light\"</span>,<span class=\"hljs-string\">\"Eeenteeer niight\"</span>,<span class=\"hljs-string\">\"Taaake my haaand\"</span>,<span class=\"hljs-string\">\"We're off to never never land\"</span>]\n</code></pre><p>Here&#39;re the ground rules:</p>\n<ul>\n<li>Define a <code>Singer</code> component in a <code>singer</code> file</li>\n<li>It should render a single line of the song</li>\n<li>That component should have a <code>pos</code> data tracking which line we are on (0,1,...)</li>\n<li>After pos 3 we should loop back to 0</li>\n<li>Each line should be displayed 1500 ms</li>\n</ul>\n<p>This demo aims to show off:</p>\n<ul>\n<li>Setting and getting state</li>\n<li>Lifecycle hooks (since we need to start the interval somewhere)</li>\n<li>Computed properties (we use <code>pos</code> to display the current <code>line</code>)</li>\n</ul>\n",
        "icount": 7,
        "folderName": "interval",
        "name": "Interval",
        "summary": "Looping through the lyrics of a song"
    }, {
        "frameworks": [{
            "name": "Angular2",
            "folderName": "angular2",
            "implementations": [{
                "title": "A vanilla implementation",
                "author": "krawaller",
                "language": "typescript",
                "maindep": "@angular/core",
                "folderName": "vanilla",
                "demoName": "localstorage",
                "framework": "angular2",
                "niceFrameworkName": "Angular2",
                "deps": [{
                    "package": "@angular/common",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/compiler",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/core",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/platform-browser",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/platform-browser-dynamic",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "reflect-metadata",
                    "version": "^0.1.8"
                }, {
                    "package": "rxjs",
                    "version": "^5.0.0-beta.11"
                }, {
                    "package": "zone.js",
                    "version": "^0.6.17"
                }],
                "frameworkVersion": "2.0.0-rc.6",
                "explanation": "<p>This is an idiomatic Angular 2 solution without any surprises.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".ts",
                    "size": 541,
                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Voter } from <span class=\"hljs-string\">'./voter.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;voter&gt;&lt;/voter&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Voter,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                    "others": [{
                        "url": "localstorage_cycle_vanilla_info.html",
                        "title": "xstream and storage driver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 259,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});"
                    }, {
                        "url": "localstorage_react_es6class_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 149,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "localstorage_react_vanilla_info.html",
                        "title": "createClass",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 149,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }]
                }, {
                    "filename": "voter",
                    "suffix": ".ts",
                    "size": 397,
                    "code": "<span class=\"hljs-keyword\">import</span> {Component} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'voter'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;button *ngFor=\"let t of teams; let i = index\" (click)=\"vote(i)\" [class.active]=\"team===i\"&gt;{{t}}&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Voter {\n  teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n  team = +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)\n  vote(x) {\n    <span class=\"hljs-keyword\">this</span>.team = x;\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,x)\n  }\n}",
                    "others": [{
                        "url": "localstorage_cycle_vanilla_info.html",
                        "title": "xstream and storage driver",
                        "framework": "Cycle",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 431,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                    }, {
                        "url": "localstorage_react_es6class_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 570,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                    }, {
                        "url": "localstorage_react_vanilla_info.html",
                        "title": "createClass",
                        "framework": "React",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 542,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                    }]
                }],
                "bundleSize": 1755952,
                "size": 938,
                "url": "localstorage_angular2_vanilla_info.html",
                "bundleName": "localstorage_angular2_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/localstorage/angular2/vanilla"
            }]
        }, {
            "name": "Cycle",
            "folderName": "cycle",
            "implementations": [{
                "title": "xstream and storage driver",
                "author": "krawaller",
                "maindep": "@cycle/dom",
                "folderName": "vanilla",
                "demoName": "localstorage",
                "framework": "cycle",
                "niceFrameworkName": "Cycle",
                "deps": [{
                    "package": "@cycle/dom",
                    "version": "^12.2.2"
                }, {
                    "package": "@cycle/xstream-run",
                    "version": "^3.1.0"
                }, {
                    "package": "xstream",
                    "version": "^6.2.0"
                }],
                "frameworkVersion": "12.2.2",
                "explanation": "<p>In Cycle, all side effects are handled in drivers. So for this app I&#39;ve added a localStorage driver alongside the regular DOM driver.</p>\n<p>A no-frills implementation of the demo app. CycleJS of course lends itself very well to the given task!</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 259,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});",
                    "others": [{
                        "url": "localstorage_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 541,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Voter } from <span class=\"hljs-string\">'./voter.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;voter&gt;&lt;/voter&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Voter,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "localstorage_cycle_vanilla_info.html",
                            "title": "xstream and storage driver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 259,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});"
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "localstorage_react_es6class_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 149,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }, {
                        "url": "localstorage_react_vanilla_info.html",
                        "title": "createClass",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 149,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }]
                }, {
                    "filename": "extras",
                    "suffix": ".js",
                    "size": 259,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n\n<span class=\"hljs-keyword\">const</span> makeStoreDriver = (key)=&gt; (save$)=&gt; {\n  save$.addListener({\n    next: (i)=&gt; localStorage.setItem(key,i),\n    error: ()=&gt; {},\n    complete: ()=&gt; {}\n  })\n  <span class=\"hljs-keyword\">return</span> xs.of(localStorage.getItem(key))\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> makeStoreDriver",
                    "others": [{
                        "url": "localstorage_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "missing": true
                    }, {
                        "url": "localstorage_react_es6class_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "missing": true
                    }, {
                        "url": "localstorage_react_vanilla_info.html",
                        "title": "createClass",
                        "framework": "React",
                        "missing": true
                    }]
                }, {
                    "filename": "voter",
                    "suffix": ".js",
                    "size": 431,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter",
                    "others": [{
                        "url": "localstorage_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "voter",
                        "suffix": ".ts",
                        "size": 397,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'voter'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;button *ngFor=\"let t of teams; let i = index\" (click)=\"vote(i)\" [class.active]=\"team===i\"&gt;{{t}}&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Voter {\n  teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n  team = +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)\n  vote(x) {\n    <span class=\"hljs-keyword\">this</span>.team = x;\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,x)\n  }\n}",
                        "others": [{
                            "url": "localstorage_cycle_vanilla_info.html",
                            "title": "xstream and storage driver",
                            "framework": "Cycle",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 431,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 570,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 542,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }]
                    }, {
                        "url": "localstorage_react_es6class_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 570,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                    }, {
                        "url": "localstorage_react_vanilla_info.html",
                        "title": "createClass",
                        "framework": "React",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 542,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                    }]
                }],
                "bundleSize": 272267,
                "size": 949,
                "url": "localstorage_cycle_vanilla_info.html",
                "bundleName": "localstorage_cycle_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/localstorage/cycle/vanilla"
            }]
        }, {
            "name": "React",
            "folderName": "react",
            "implementations": [{
                "title": "es6 class",
                "author": "krawaller",
                "maindep": "react",
                "folderName": "es6class",
                "demoName": "localstorage",
                "framework": "react",
                "niceFrameworkName": "React",
                "deps": [{
                    "package": "classnames",
                    "version": "^2.2.5"
                }, {
                    "package": "react",
                    "version": "^15.3.1"
                }, {
                    "package": "react-dom",
                    "version": "^15.3.1"
                }],
                "frameworkVersion": "15.3.1",
                "explanation": "<p>A vanilla implementation, using ES6 classes which means initializing stuff happens in the constructor.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 149,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                    "others": [{
                        "url": "localstorage_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 541,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Voter } from <span class=\"hljs-string\">'./voter.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;voter&gt;&lt;/voter&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Voter,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "localstorage_cycle_vanilla_info.html",
                            "title": "xstream and storage driver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 259,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});"
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "localstorage_cycle_vanilla_info.html",
                        "title": "xstream and storage driver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 259,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});",
                        "others": [{
                            "url": "localstorage_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 541,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Voter } from <span class=\"hljs-string\">'./voter.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;voter&gt;&lt;/voter&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Voter,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "localstorage_cycle_vanilla_info.html",
                                "title": "xstream and storage driver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 259,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});"
                            }, {
                                "url": "localstorage_react_es6class_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 149,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "localstorage_react_vanilla_info.html",
                                "title": "createClass",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 149,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }]
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "localstorage_react_vanilla_info.html",
                        "title": "createClass",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 149,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }]
                }, {
                    "filename": "voter",
                    "suffix": ".js",
                    "size": 570,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter",
                    "others": [{
                        "url": "localstorage_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "voter",
                        "suffix": ".ts",
                        "size": 397,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'voter'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;button *ngFor=\"let t of teams; let i = index\" (click)=\"vote(i)\" [class.active]=\"team===i\"&gt;{{t}}&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Voter {\n  teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n  team = +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)\n  vote(x) {\n    <span class=\"hljs-keyword\">this</span>.team = x;\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,x)\n  }\n}",
                        "others": [{
                            "url": "localstorage_cycle_vanilla_info.html",
                            "title": "xstream and storage driver",
                            "framework": "Cycle",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 431,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 570,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 542,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }]
                    }, {
                        "url": "localstorage_cycle_vanilla_info.html",
                        "title": "xstream and storage driver",
                        "framework": "Cycle",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 431,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter",
                        "others": [{
                            "url": "localstorage_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "voter",
                            "suffix": ".ts",
                            "size": 397,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'voter'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;button *ngFor=\"let t of teams; let i = index\" (click)=\"vote(i)\" [class.active]=\"team===i\"&gt;{{t}}&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Voter {\n  teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n  team = +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)\n  vote(x) {\n    <span class=\"hljs-keyword\">this</span>.team = x;\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,x)\n  }\n}",
                            "others": [{
                                "url": "localstorage_cycle_vanilla_info.html",
                                "title": "xstream and storage driver",
                                "framework": "Cycle",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 431,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }, {
                                "url": "localstorage_react_es6class_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 570,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }, {
                                "url": "localstorage_react_vanilla_info.html",
                                "title": "createClass",
                                "framework": "React",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 542,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }]
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 570,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 542,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }]
                    }, {
                        "url": "localstorage_react_vanilla_info.html",
                        "title": "createClass",
                        "framework": "React",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 542,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                    }]
                }],
                "bundleSize": 742964,
                "size": 719,
                "url": "localstorage_react_es6class_info.html",
                "bundleName": "localstorage_react_es6class.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/localstorage/react/es6class"
            }, {
                "title": "createClass",
                "author": "krawaller",
                "maindep": "react",
                "folderName": "vanilla",
                "demoName": "localstorage",
                "framework": "react",
                "niceFrameworkName": "React",
                "deps": [{
                    "package": "classnames",
                    "version": "^2.2.5"
                }, {
                    "package": "react",
                    "version": "^15.3.1"
                }, {
                    "package": "react-dom",
                    "version": "^15.3.1"
                }],
                "frameworkVersion": "15.3.1",
                "explanation": "<p>No surprises here, this is a vanilla React implementation using the createClass Syntax.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 149,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                    "others": [{
                        "url": "localstorage_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 541,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Voter } from <span class=\"hljs-string\">'./voter.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;voter&gt;&lt;/voter&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Voter,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "localstorage_cycle_vanilla_info.html",
                            "title": "xstream and storage driver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 259,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});"
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "localstorage_cycle_vanilla_info.html",
                        "title": "xstream and storage driver",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 259,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});",
                        "others": [{
                            "url": "localstorage_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 541,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Voter } from <span class=\"hljs-string\">'./voter.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;voter&gt;&lt;/voter&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Voter,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "localstorage_cycle_vanilla_info.html",
                                "title": "xstream and storage driver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 259,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});"
                            }, {
                                "url": "localstorage_react_es6class_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 149,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "localstorage_react_vanilla_info.html",
                                "title": "createClass",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 149,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }]
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "localstorage_react_es6class_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 149,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                        "others": [{
                            "url": "localstorage_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 541,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Voter } from <span class=\"hljs-string\">'./voter.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;voter&gt;&lt;/voter&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Voter,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "localstorage_cycle_vanilla_info.html",
                                "title": "xstream and storage driver",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 259,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});"
                            }, {
                                "url": "localstorage_react_es6class_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 149,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "localstorage_react_vanilla_info.html",
                                "title": "createClass",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 149,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }]
                        }, {
                            "url": "localstorage_cycle_vanilla_info.html",
                            "title": "xstream and storage driver",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 259,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});",
                            "others": [{
                                "url": "localstorage_angular2_vanilla_info.html",
                                "title": "A vanilla implementation",
                                "framework": "Angular2",
                                "filename": "bootstrap",
                                "suffix": ".ts",
                                "size": 541,
                                "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { Voter } from <span class=\"hljs-string\">'./voter.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;voter&gt;&lt;/voter&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule ],\n    declarations: [ Voter,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                                "others": [{
                                    "url": "localstorage_cycle_vanilla_info.html",
                                    "title": "xstream and storage driver",
                                    "framework": "Cycle",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 259,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n<span class=\"hljs-keyword\">import</span> makeStoreDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nrun(Voter, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  store: makeStoreDriver(<span class=\"hljs-string\">'JSCOMPVOTE'</span>)\n});"
                                }, {
                                    "url": "localstorage_react_es6class_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 149,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }, {
                                    "url": "localstorage_react_vanilla_info.html",
                                    "title": "createClass",
                                    "framework": "React",
                                    "filename": "bootstrap",
                                    "suffix": ".js",
                                    "size": 149,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                                }]
                            }, {
                                "url": "localstorage_react_es6class_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 149,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }, {
                                "url": "localstorage_react_vanilla_info.html",
                                "title": "createClass",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 149,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }]
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 149,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Voter <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./voter'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Voter</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }]
                }, {
                    "filename": "voter",
                    "suffix": ".js",
                    "size": 542,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter",
                    "others": [{
                        "url": "localstorage_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "voter",
                        "suffix": ".ts",
                        "size": 397,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'voter'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;button *ngFor=\"let t of teams; let i = index\" (click)=\"vote(i)\" [class.active]=\"team===i\"&gt;{{t}}&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Voter {\n  teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n  team = +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)\n  vote(x) {\n    <span class=\"hljs-keyword\">this</span>.team = x;\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,x)\n  }\n}",
                        "others": [{
                            "url": "localstorage_cycle_vanilla_info.html",
                            "title": "xstream and storage driver",
                            "framework": "Cycle",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 431,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 570,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 542,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }]
                    }, {
                        "url": "localstorage_cycle_vanilla_info.html",
                        "title": "xstream and storage driver",
                        "framework": "Cycle",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 431,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter",
                        "others": [{
                            "url": "localstorage_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "voter",
                            "suffix": ".ts",
                            "size": 397,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'voter'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;button *ngFor=\"let t of teams; let i = index\" (click)=\"vote(i)\" [class.active]=\"team===i\"&gt;{{t}}&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Voter {\n  teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n  team = +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)\n  vote(x) {\n    <span class=\"hljs-keyword\">this</span>.team = x;\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,x)\n  }\n}",
                            "others": [{
                                "url": "localstorage_cycle_vanilla_info.html",
                                "title": "xstream and storage driver",
                                "framework": "Cycle",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 431,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }, {
                                "url": "localstorage_react_es6class_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 570,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }, {
                                "url": "localstorage_react_vanilla_info.html",
                                "title": "createClass",
                                "framework": "React",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 542,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }]
                        }, {
                            "url": "localstorage_react_es6class_info.html",
                            "title": "es6 class",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 570,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 542,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }]
                    }, {
                        "url": "localstorage_react_es6class_info.html",
                        "title": "es6 class",
                        "framework": "React",
                        "filename": "voter",
                        "suffix": ".js",
                        "size": 570,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter",
                        "others": [{
                            "url": "localstorage_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "voter",
                            "suffix": ".ts",
                            "size": 397,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'voter'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;button *ngFor=\"let t of teams; let i = index\" (click)=\"vote(i)\" [class.active]=\"team===i\"&gt;{{t}}&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Voter {\n  teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n  team = +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)\n  vote(x) {\n    <span class=\"hljs-keyword\">this</span>.team = x;\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,x)\n  }\n}",
                            "others": [{
                                "url": "localstorage_cycle_vanilla_info.html",
                                "title": "xstream and storage driver",
                                "framework": "Cycle",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 431,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }, {
                                "url": "localstorage_react_es6class_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 570,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }, {
                                "url": "localstorage_react_vanilla_info.html",
                                "title": "createClass",
                                "framework": "React",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 542,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }]
                        }, {
                            "url": "localstorage_cycle_vanilla_info.html",
                            "title": "xstream and storage driver",
                            "framework": "Cycle",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 431,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter",
                            "others": [{
                                "url": "localstorage_angular2_vanilla_info.html",
                                "title": "A vanilla implementation",
                                "framework": "Angular2",
                                "filename": "voter",
                                "suffix": ".ts",
                                "size": 397,
                                "code": "<span class=\"hljs-keyword\">import</span> {Component} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'voter'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;button *ngFor=\"let t of teams; let i = index\" (click)=\"vote(i)\" [class.active]=\"team===i\"&gt;{{t}}&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Voter {\n  teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n  team = +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)\n  vote(x) {\n    <span class=\"hljs-keyword\">this</span>.team = x;\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,x)\n  }\n}",
                                "others": [{
                                    "url": "localstorage_cycle_vanilla_info.html",
                                    "title": "xstream and storage driver",
                                    "framework": "Cycle",
                                    "filename": "voter",
                                    "suffix": ".js",
                                    "size": 431,
                                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,button,p} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Voter</span>(<span class=\"hljs-params\">{DOM,store}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> vote$ = DOM.select(<span class=\"hljs-string\">'button'</span>).events(<span class=\"hljs-string\">'click'</span>).map(e=&gt;e.target.getAttribute(<span class=\"hljs-string\">'data-t'</span>))\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(vote$,store).map(t=&gt;div(\n      teams.map((_,n)=&gt;button({attrs:{<span class=\"hljs-string\">\"data-t\"</span>:n,<span class=\"hljs-string\">\"class\"</span>:(n===+t?<span class=\"hljs-string\">'active'</span>:<span class=\"hljs-string\">''</span>)}},[teams[n]])))\n    ),\n    store: vote$\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                                }, {
                                    "url": "localstorage_react_es6class_info.html",
                                    "title": "es6 class",
                                    "framework": "React",
                                    "filename": "voter",
                                    "suffix": ".js",
                                    "size": 570,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                                }, {
                                    "url": "localstorage_react_vanilla_info.html",
                                    "title": "createClass",
                                    "framework": "React",
                                    "filename": "voter",
                                    "suffix": ".js",
                                    "size": 542,
                                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                                }]
                            }, {
                                "url": "localstorage_react_es6class_info.html",
                                "title": "es6 class",
                                "framework": "React",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 570,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Voter</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>()\n    <span class=\"hljs-keyword\">this</span>.state = {team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}\n  }\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  }\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }, {
                                "url": "localstorage_react_vanilla_info.html",
                                "title": "createClass",
                                "framework": "React",
                                "filename": "voter",
                                "suffix": ".js",
                                "size": 542,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                            }]
                        }, {
                            "url": "localstorage_react_vanilla_info.html",
                            "title": "createClass",
                            "framework": "React",
                            "filename": "voter",
                            "suffix": ".js",
                            "size": 542,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> classNames <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'classnames'</span>\n\n<span class=\"hljs-keyword\">let</span> teams = [<span class=\"hljs-string\">\"Valor\"</span>,<span class=\"hljs-string\">\"Mystic\"</span>,<span class=\"hljs-string\">\"Instinct\"</span>]\n\n<span class=\"hljs-keyword\">let</span> Voter = React.createClass({\n  getInitialState: ()=&gt; ({team: +(localStorage.getItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>) || <span class=\"hljs-number\">1</span>)}),\n  vote(team) {\n    <span class=\"hljs-keyword\">this</span>.setState({team})\n    localStorage.setItem(<span class=\"hljs-string\">'JSCOMPVOTE'</span>,team)\n  },\n  render() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      {teams.map((t,n)=&gt; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{n}</span>\n        <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{classNames({active:this.state.team</span> === <span class=\"hljs-string\">n})}</span>\n        <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.vote.bind(this,n)}</span>&gt;</span>{t}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      )}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Voter"
                        }]
                    }]
                }],
                "bundleSize": 741171,
                "size": 691,
                "url": "localstorage_react_vanilla_info.html",
                "bundleName": "localstorage_react_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/localstorage/react/vanilla"
            }]
        }],
        "filenames": ["bootstrap", "voter", "extras"],
        "description": "<p>odwiefjjrh</p>\n",
        "icount": 4,
        "folderName": "localstorage",
        "name": "Local Storage",
        "summary": "Showing how to integrate localStorage reads and writes"
    }, {
        "frameworks": [{
            "name": "Angular2",
            "folderName": "angular2",
            "implementations": [{
                "title": "A vanilla implementation",
                "author": "krawaller",
                "language": "typescript",
                "maindep": "@angular/core",
                "folderName": "vanilla",
                "demoName": "twoway",
                "framework": "angular2",
                "niceFrameworkName": "Angular2",
                "deps": [{
                    "package": "@angular/common",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/compiler",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/core",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/forms",
                    "version": "^0.3.0"
                }, {
                    "package": "@angular/platform-browser",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "@angular/platform-browser-dynamic",
                    "version": "^2.0.0-rc.6"
                }, {
                    "package": "reflect-metadata",
                    "version": "^0.1.8"
                }, {
                    "package": "rxjs",
                    "version": "^5.0.0-beta.11"
                }, {
                    "package": "zone.js",
                    "version": "^0.6.17"
                }],
                "frameworkVersion": "2.0.0-rc.6",
                "explanation": "<p>This is an idiomatic Angular 2 solution without any surprises.</p>\n<p>By using <code>@ViewChild</code> we simply add focus in the click handler.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".ts",
                    "size": 627,
                    "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { FormsModule }   from <span class=\"hljs-string\">'@angular/forms'</span>;\n<span class=\"hljs-keyword\">import</span> { Phonebooth } from <span class=\"hljs-string\">'./phonebooth.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;phonebooth&gt;&lt;/phonebooth&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule, FormsModule ],\n    declarations: [ Phonebooth,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                    "others": [{
                        "url": "twoway_cycle_vanilla_info.html",
                        "title": "A straight-forward implementation",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 274,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> makeFocusDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nrun(Phonebooth, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  focus: makeFocusDriver(<span class=\"hljs-string\">'#app input'</span>)\n});"
                    }, {
                        "url": "twoway_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 164,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Phonebooth</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }]
                }, {
                    "filename": "phonebooth",
                    "suffix": ".ts",
                    "size": 395,
                    "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'phonebooth'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;input #field [(ngModel)]=\"name\"&gt;&lt;br/&gt;\n    &lt;p&gt;Your name is {{name}}.&lt;/p&gt;\n    &lt;button (click)=\"change()\"&gt;Put on costume&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Phonebooth {\n  @ViewChild(<span class=\"hljs-string\">'field'</span>) input\n  name = <span class=\"hljs-string\">'Steve'</span>\n  change() {\n    <span class=\"hljs-keyword\">this</span>.name = <span class=\"hljs-string\">'Batman'</span>\n    <span class=\"hljs-keyword\">this</span>.input.nativeElement.focus()\n  }\n}",
                    "others": [{
                        "url": "twoway_cycle_vanilla_info.html",
                        "title": "A straight-forward implementation",
                        "framework": "Cycle",
                        "filename": "phonebooth",
                        "suffix": ".js",
                        "size": 517,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,input,p,button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Phonebooth</span>(<span class=\"hljs-params\">{DOM}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> type$ = DOM.select(<span class=\"hljs-string\">'input'</span>)\n    .events(<span class=\"hljs-string\">'input'</span>)\n    .map(e =&gt; e.target.value)\n    .startWith(<span class=\"hljs-string\">'Steve'</span>);\n  <span class=\"hljs-keyword\">const</span> click$ = DOM.select(<span class=\"hljs-string\">'button'</span>)\n    .events(<span class=\"hljs-string\">'click'</span>)\n    .mapTo(<span class=\"hljs-string\">'Batman'</span>)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(type$,click$).map(name=&gt;div([\n      input({props:{value:name}}),\n      p([<span class=\"hljs-string\">'Your name is '</span>+name+<span class=\"hljs-string\">'.'</span>]),\n      button([<span class=\"hljs-string\">'Put on costume'</span>])\n    ])),\n    focus: click$\n  };\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Phonebooth"
                    }, {
                        "url": "twoway_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "phonebooth",
                        "suffix": ".js",
                        "size": 516,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Phonebooth = React.createClass({\n  getInitialState: ()=&gt; ({name:<span class=\"hljs-string\">'Steve'</span>}),\n  change() {\n    <span class=\"hljs-keyword\">this</span>.setState({name:<span class=\"hljs-string\">'Batman'</span>})\n    <span class=\"hljs-keyword\">this</span>.refs.field.focus()\n  },\n  type(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({name:e.target.value})\n  },\n  render() {\n    <span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-keyword\">this</span>.state.name\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"field\"</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.type}</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Your name is {name}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.change}</span>&gt;</span>Put on costume<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  }\n})\n\nexport default Phonebooth</span>"
                    }]
                }],
                "bundleSize": 1952512,
                "size": 1022,
                "url": "twoway_angular2_vanilla_info.html",
                "bundleName": "twoway_angular2_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/twoway/angular2/vanilla"
            }]
        }, {
            "name": "Cycle",
            "folderName": "cycle",
            "implementations": [{
                "title": "A straight-forward implementation",
                "author": "krawaller",
                "maindep": "@cycle/dom",
                "folderName": "vanilla",
                "demoName": "twoway",
                "framework": "cycle",
                "niceFrameworkName": "Cycle",
                "deps": [{
                    "package": "@cycle/dom",
                    "version": "^12.2.2"
                }, {
                    "package": "@cycle/xstream-run",
                    "version": "^3.1.0"
                }, {
                    "package": "xstream",
                    "version": "^6.2.0"
                }],
                "frameworkVersion": "12.2.2",
                "explanation": "<p>A no-frills implementation of the demo app.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 274,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> makeFocusDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nrun(Phonebooth, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  focus: makeFocusDriver(<span class=\"hljs-string\">'#app input'</span>)\n});",
                    "others": [{
                        "url": "twoway_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 627,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { FormsModule }   from <span class=\"hljs-string\">'@angular/forms'</span>;\n<span class=\"hljs-keyword\">import</span> { Phonebooth } from <span class=\"hljs-string\">'./phonebooth.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;phonebooth&gt;&lt;/phonebooth&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule, FormsModule ],\n    declarations: [ Phonebooth,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "twoway_cycle_vanilla_info.html",
                            "title": "A straight-forward implementation",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 274,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> makeFocusDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nrun(Phonebooth, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  focus: makeFocusDriver(<span class=\"hljs-string\">'#app input'</span>)\n});"
                        }, {
                            "url": "twoway_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 164,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Phonebooth</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "twoway_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 164,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Phonebooth</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                    }]
                }, {
                    "filename": "extras",
                    "suffix": ".js",
                    "size": 190,
                    "code": "<span class=\"hljs-keyword\">const</span> focusDriver = (selector) =&gt; (stream)=&gt; stream.addListener({\n  next: ()=&gt; <span class=\"hljs-built_in\">document</span>.querySelector(selector).focus(),\n  error: ()=&gt; {},\n  complete: ()=&gt; {}\n});\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> focusDriver",
                    "others": [{
                        "url": "twoway_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "missing": true
                    }, {
                        "url": "twoway_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "missing": true
                    }]
                }, {
                    "filename": "phonebooth",
                    "suffix": ".js",
                    "size": 517,
                    "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,input,p,button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Phonebooth</span>(<span class=\"hljs-params\">{DOM}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> type$ = DOM.select(<span class=\"hljs-string\">'input'</span>)\n    .events(<span class=\"hljs-string\">'input'</span>)\n    .map(e =&gt; e.target.value)\n    .startWith(<span class=\"hljs-string\">'Steve'</span>);\n  <span class=\"hljs-keyword\">const</span> click$ = DOM.select(<span class=\"hljs-string\">'button'</span>)\n    .events(<span class=\"hljs-string\">'click'</span>)\n    .mapTo(<span class=\"hljs-string\">'Batman'</span>)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(type$,click$).map(name=&gt;div([\n      input({props:{value:name}}),\n      p([<span class=\"hljs-string\">'Your name is '</span>+name+<span class=\"hljs-string\">'.'</span>]),\n      button([<span class=\"hljs-string\">'Put on costume'</span>])\n    ])),\n    focus: click$\n  };\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Phonebooth",
                    "others": [{
                        "url": "twoway_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "phonebooth",
                        "suffix": ".ts",
                        "size": 395,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'phonebooth'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;input #field [(ngModel)]=\"name\"&gt;&lt;br/&gt;\n    &lt;p&gt;Your name is {{name}}.&lt;/p&gt;\n    &lt;button (click)=\"change()\"&gt;Put on costume&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Phonebooth {\n  @ViewChild(<span class=\"hljs-string\">'field'</span>) input\n  name = <span class=\"hljs-string\">'Steve'</span>\n  change() {\n    <span class=\"hljs-keyword\">this</span>.name = <span class=\"hljs-string\">'Batman'</span>\n    <span class=\"hljs-keyword\">this</span>.input.nativeElement.focus()\n  }\n}",
                        "others": [{
                            "url": "twoway_cycle_vanilla_info.html",
                            "title": "A straight-forward implementation",
                            "framework": "Cycle",
                            "filename": "phonebooth",
                            "suffix": ".js",
                            "size": 517,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,input,p,button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Phonebooth</span>(<span class=\"hljs-params\">{DOM}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> type$ = DOM.select(<span class=\"hljs-string\">'input'</span>)\n    .events(<span class=\"hljs-string\">'input'</span>)\n    .map(e =&gt; e.target.value)\n    .startWith(<span class=\"hljs-string\">'Steve'</span>);\n  <span class=\"hljs-keyword\">const</span> click$ = DOM.select(<span class=\"hljs-string\">'button'</span>)\n    .events(<span class=\"hljs-string\">'click'</span>)\n    .mapTo(<span class=\"hljs-string\">'Batman'</span>)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(type$,click$).map(name=&gt;div([\n      input({props:{value:name}}),\n      p([<span class=\"hljs-string\">'Your name is '</span>+name+<span class=\"hljs-string\">'.'</span>]),\n      button([<span class=\"hljs-string\">'Put on costume'</span>])\n    ])),\n    focus: click$\n  };\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Phonebooth"
                        }, {
                            "url": "twoway_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "phonebooth",
                            "suffix": ".js",
                            "size": 516,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Phonebooth = React.createClass({\n  getInitialState: ()=&gt; ({name:<span class=\"hljs-string\">'Steve'</span>}),\n  change() {\n    <span class=\"hljs-keyword\">this</span>.setState({name:<span class=\"hljs-string\">'Batman'</span>})\n    <span class=\"hljs-keyword\">this</span>.refs.field.focus()\n  },\n  type(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({name:e.target.value})\n  },\n  render() {\n    <span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-keyword\">this</span>.state.name\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"field\"</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.type}</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Your name is {name}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.change}</span>&gt;</span>Put on costume<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  }\n})\n\nexport default Phonebooth</span>"
                        }]
                    }, {
                        "url": "twoway_react_vanilla_info.html",
                        "title": "Straightforward React",
                        "framework": "React",
                        "filename": "phonebooth",
                        "suffix": ".js",
                        "size": 516,
                        "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Phonebooth = React.createClass({\n  getInitialState: ()=&gt; ({name:<span class=\"hljs-string\">'Steve'</span>}),\n  change() {\n    <span class=\"hljs-keyword\">this</span>.setState({name:<span class=\"hljs-string\">'Batman'</span>})\n    <span class=\"hljs-keyword\">this</span>.refs.field.focus()\n  },\n  type(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({name:e.target.value})\n  },\n  render() {\n    <span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-keyword\">this</span>.state.name\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"field\"</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.type}</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Your name is {name}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.change}</span>&gt;</span>Put on costume<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  }\n})\n\nexport default Phonebooth</span>"
                    }]
                }],
                "bundleSize": 272020,
                "size": 981,
                "url": "twoway_cycle_vanilla_info.html",
                "bundleName": "twoway_cycle_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/twoway/cycle/vanilla"
            }]
        }, {
            "name": "React",
            "folderName": "react",
            "implementations": [{
                "title": "Straightforward React",
                "author": "krawaller",
                "maindep": "react",
                "folderName": "vanilla",
                "demoName": "twoway",
                "framework": "react",
                "niceFrameworkName": "React",
                "deps": [{
                    "package": "react",
                    "version": "^15.3.1"
                }, {
                    "package": "react-dom",
                    "version": "^15.3.1"
                }],
                "frameworkVersion": "15.3.1",
                "explanation": "<p>No surprises here, this is a vanilla React implementation.</p>\n",
                "files": [{
                    "filename": "bootstrap",
                    "suffix": ".js",
                    "size": 164,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Phonebooth</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );",
                    "others": [{
                        "url": "twoway_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "bootstrap",
                        "suffix": ".ts",
                        "size": 627,
                        "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { FormsModule }   from <span class=\"hljs-string\">'@angular/forms'</span>;\n<span class=\"hljs-keyword\">import</span> { Phonebooth } from <span class=\"hljs-string\">'./phonebooth.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;phonebooth&gt;&lt;/phonebooth&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule, FormsModule ],\n    declarations: [ Phonebooth,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                        "others": [{
                            "url": "twoway_cycle_vanilla_info.html",
                            "title": "A straight-forward implementation",
                            "framework": "Cycle",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 274,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> makeFocusDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nrun(Phonebooth, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  focus: makeFocusDriver(<span class=\"hljs-string\">'#app input'</span>)\n});"
                        }, {
                            "url": "twoway_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 164,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Phonebooth</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }, {
                        "url": "twoway_cycle_vanilla_info.html",
                        "title": "A straight-forward implementation",
                        "framework": "Cycle",
                        "filename": "bootstrap",
                        "suffix": ".js",
                        "size": 274,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> makeFocusDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nrun(Phonebooth, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  focus: makeFocusDriver(<span class=\"hljs-string\">'#app input'</span>)\n});",
                        "others": [{
                            "url": "twoway_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "bootstrap",
                            "suffix": ".ts",
                            "size": 627,
                            "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'zone.js'</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'reflect-metadata'</span>\n\n<span class=\"hljs-keyword\">import</span> { NgModule, Component }      from <span class=\"hljs-string\">'@angular/core'</span>;\n<span class=\"hljs-keyword\">import</span> { BrowserModule } from <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { FormsModule }   from <span class=\"hljs-string\">'@angular/forms'</span>;\n<span class=\"hljs-keyword\">import</span> { Phonebooth } from <span class=\"hljs-string\">'./phonebooth.ts'</span>;\n<span class=\"hljs-keyword\">import</span> { platformBrowserDynamic } from <span class=\"hljs-string\">'@angular/platform-browser-dynamic'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'#app'</span>,\n  template: <span class=\"hljs-string\">`&lt;phonebooth&gt;&lt;/phonebooth&gt;`</span>\n})\n<span class=\"hljs-keyword\">class</span> Root {}\n\n@NgModule({\n    imports:      [ BrowserModule, FormsModule ],\n    declarations: [ Phonebooth,Root ],\n    bootstrap:    [ Root ]\n})\n<span class=\"hljs-keyword\">class</span> AppModule {}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n",
                            "others": [{
                                "url": "twoway_cycle_vanilla_info.html",
                                "title": "A straight-forward implementation",
                                "framework": "Cycle",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 274,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {run} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/xstream-run'</span>\n<span class=\"hljs-keyword\">import</span> {makeDOMDriver} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>\n\n<span class=\"hljs-keyword\">import</span> makeFocusDriver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./extras'</span>\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nrun(Phonebooth, {\n  DOM: makeDOMDriver(<span class=\"hljs-string\">'#app'</span>),\n  focus: makeFocusDriver(<span class=\"hljs-string\">'#app input'</span>)\n});"
                            }, {
                                "url": "twoway_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "bootstrap",
                                "suffix": ".js",
                                "size": 164,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Phonebooth</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                            }]
                        }, {
                            "url": "twoway_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "bootstrap",
                            "suffix": ".js",
                            "size": 164,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>\n\n<span class=\"hljs-keyword\">import</span> Phonebooth <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./phonebooth'</span>\n\nReactDOM.render( <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Phonebooth</span>/&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"app\"</span>) );"
                        }]
                    }]
                }, {
                    "filename": "phonebooth",
                    "suffix": ".js",
                    "size": 516,
                    "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Phonebooth = React.createClass({\n  getInitialState: ()=&gt; ({name:<span class=\"hljs-string\">'Steve'</span>}),\n  change() {\n    <span class=\"hljs-keyword\">this</span>.setState({name:<span class=\"hljs-string\">'Batman'</span>})\n    <span class=\"hljs-keyword\">this</span>.refs.field.focus()\n  },\n  type(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({name:e.target.value})\n  },\n  render() {\n    <span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-keyword\">this</span>.state.name\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"field\"</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.type}</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Your name is {name}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.change}</span>&gt;</span>Put on costume<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  }\n})\n\nexport default Phonebooth</span>",
                    "others": [{
                        "url": "twoway_angular2_vanilla_info.html",
                        "title": "A vanilla implementation",
                        "framework": "Angular2",
                        "filename": "phonebooth",
                        "suffix": ".ts",
                        "size": 395,
                        "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'phonebooth'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;input #field [(ngModel)]=\"name\"&gt;&lt;br/&gt;\n    &lt;p&gt;Your name is {{name}}.&lt;/p&gt;\n    &lt;button (click)=\"change()\"&gt;Put on costume&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Phonebooth {\n  @ViewChild(<span class=\"hljs-string\">'field'</span>) input\n  name = <span class=\"hljs-string\">'Steve'</span>\n  change() {\n    <span class=\"hljs-keyword\">this</span>.name = <span class=\"hljs-string\">'Batman'</span>\n    <span class=\"hljs-keyword\">this</span>.input.nativeElement.focus()\n  }\n}",
                        "others": [{
                            "url": "twoway_cycle_vanilla_info.html",
                            "title": "A straight-forward implementation",
                            "framework": "Cycle",
                            "filename": "phonebooth",
                            "suffix": ".js",
                            "size": 517,
                            "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,input,p,button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Phonebooth</span>(<span class=\"hljs-params\">{DOM}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> type$ = DOM.select(<span class=\"hljs-string\">'input'</span>)\n    .events(<span class=\"hljs-string\">'input'</span>)\n    .map(e =&gt; e.target.value)\n    .startWith(<span class=\"hljs-string\">'Steve'</span>);\n  <span class=\"hljs-keyword\">const</span> click$ = DOM.select(<span class=\"hljs-string\">'button'</span>)\n    .events(<span class=\"hljs-string\">'click'</span>)\n    .mapTo(<span class=\"hljs-string\">'Batman'</span>)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(type$,click$).map(name=&gt;div([\n      input({props:{value:name}}),\n      p([<span class=\"hljs-string\">'Your name is '</span>+name+<span class=\"hljs-string\">'.'</span>]),\n      button([<span class=\"hljs-string\">'Put on costume'</span>])\n    ])),\n    focus: click$\n  };\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Phonebooth"
                        }, {
                            "url": "twoway_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "phonebooth",
                            "suffix": ".js",
                            "size": 516,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Phonebooth = React.createClass({\n  getInitialState: ()=&gt; ({name:<span class=\"hljs-string\">'Steve'</span>}),\n  change() {\n    <span class=\"hljs-keyword\">this</span>.setState({name:<span class=\"hljs-string\">'Batman'</span>})\n    <span class=\"hljs-keyword\">this</span>.refs.field.focus()\n  },\n  type(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({name:e.target.value})\n  },\n  render() {\n    <span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-keyword\">this</span>.state.name\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"field\"</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.type}</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Your name is {name}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.change}</span>&gt;</span>Put on costume<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  }\n})\n\nexport default Phonebooth</span>"
                        }]
                    }, {
                        "url": "twoway_cycle_vanilla_info.html",
                        "title": "A straight-forward implementation",
                        "framework": "Cycle",
                        "filename": "phonebooth",
                        "suffix": ".js",
                        "size": 517,
                        "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,input,p,button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Phonebooth</span>(<span class=\"hljs-params\">{DOM}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> type$ = DOM.select(<span class=\"hljs-string\">'input'</span>)\n    .events(<span class=\"hljs-string\">'input'</span>)\n    .map(e =&gt; e.target.value)\n    .startWith(<span class=\"hljs-string\">'Steve'</span>);\n  <span class=\"hljs-keyword\">const</span> click$ = DOM.select(<span class=\"hljs-string\">'button'</span>)\n    .events(<span class=\"hljs-string\">'click'</span>)\n    .mapTo(<span class=\"hljs-string\">'Batman'</span>)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(type$,click$).map(name=&gt;div([\n      input({props:{value:name}}),\n      p([<span class=\"hljs-string\">'Your name is '</span>+name+<span class=\"hljs-string\">'.'</span>]),\n      button([<span class=\"hljs-string\">'Put on costume'</span>])\n    ])),\n    focus: click$\n  };\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Phonebooth",
                        "others": [{
                            "url": "twoway_angular2_vanilla_info.html",
                            "title": "A vanilla implementation",
                            "framework": "Angular2",
                            "filename": "phonebooth",
                            "suffix": ".ts",
                            "size": 395,
                            "code": "<span class=\"hljs-keyword\">import</span> {Component,ViewChild} from <span class=\"hljs-string\">'@angular/core'</span>;\n\n@Component({\n  selector: <span class=\"hljs-string\">'phonebooth'</span>,\n  template: <span class=\"hljs-string\">`\n    &lt;input #field [(ngModel)]=\"name\"&gt;&lt;br/&gt;\n    &lt;p&gt;Your name is {{name}}.&lt;/p&gt;\n    &lt;button (click)=\"change()\"&gt;Put on costume&lt;/button&gt;\n  `</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> Phonebooth {\n  @ViewChild(<span class=\"hljs-string\">'field'</span>) input\n  name = <span class=\"hljs-string\">'Steve'</span>\n  change() {\n    <span class=\"hljs-keyword\">this</span>.name = <span class=\"hljs-string\">'Batman'</span>\n    <span class=\"hljs-keyword\">this</span>.input.nativeElement.focus()\n  }\n}",
                            "others": [{
                                "url": "twoway_cycle_vanilla_info.html",
                                "title": "A straight-forward implementation",
                                "framework": "Cycle",
                                "filename": "phonebooth",
                                "suffix": ".js",
                                "size": 517,
                                "code": "<span class=\"hljs-keyword\">import</span> xs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'xstream'</span>\n<span class=\"hljs-keyword\">import</span> {div,input,p,button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@cycle/dom'</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Phonebooth</span>(<span class=\"hljs-params\">{DOM}</span>)</span>{\n  <span class=\"hljs-keyword\">const</span> type$ = DOM.select(<span class=\"hljs-string\">'input'</span>)\n    .events(<span class=\"hljs-string\">'input'</span>)\n    .map(e =&gt; e.target.value)\n    .startWith(<span class=\"hljs-string\">'Steve'</span>);\n  <span class=\"hljs-keyword\">const</span> click$ = DOM.select(<span class=\"hljs-string\">'button'</span>)\n    .events(<span class=\"hljs-string\">'click'</span>)\n    .mapTo(<span class=\"hljs-string\">'Batman'</span>)\n  <span class=\"hljs-keyword\">return</span> {\n    DOM: xs.merge(type$,click$).map(name=&gt;div([\n      input({props:{value:name}}),\n      p([<span class=\"hljs-string\">'Your name is '</span>+name+<span class=\"hljs-string\">'.'</span>]),\n      button([<span class=\"hljs-string\">'Put on costume'</span>])\n    ])),\n    focus: click$\n  };\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Phonebooth"
                            }, {
                                "url": "twoway_react_vanilla_info.html",
                                "title": "Straightforward React",
                                "framework": "React",
                                "filename": "phonebooth",
                                "suffix": ".js",
                                "size": 516,
                                "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Phonebooth = React.createClass({\n  getInitialState: ()=&gt; ({name:<span class=\"hljs-string\">'Steve'</span>}),\n  change() {\n    <span class=\"hljs-keyword\">this</span>.setState({name:<span class=\"hljs-string\">'Batman'</span>})\n    <span class=\"hljs-keyword\">this</span>.refs.field.focus()\n  },\n  type(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({name:e.target.value})\n  },\n  render() {\n    <span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-keyword\">this</span>.state.name\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"field\"</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.type}</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Your name is {name}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.change}</span>&gt;</span>Put on costume<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  }\n})\n\nexport default Phonebooth</span>"
                            }]
                        }, {
                            "url": "twoway_react_vanilla_info.html",
                            "title": "Straightforward React",
                            "framework": "React",
                            "filename": "phonebooth",
                            "suffix": ".js",
                            "size": 516,
                            "code": "<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n\n<span class=\"hljs-keyword\">let</span> Phonebooth = React.createClass({\n  getInitialState: ()=&gt; ({name:<span class=\"hljs-string\">'Steve'</span>}),\n  change() {\n    <span class=\"hljs-keyword\">this</span>.setState({name:<span class=\"hljs-string\">'Batman'</span>})\n    <span class=\"hljs-keyword\">this</span>.refs.field.focus()\n  },\n  type(e) {\n    <span class=\"hljs-keyword\">this</span>.setState({name:e.target.value})\n  },\n  render() {\n    <span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-keyword\">this</span>.state.name\n    <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"field\"</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.type}</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{name}</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Your name is {name}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.change}</span>&gt;</span>Put on costume<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  }\n})\n\nexport default Phonebooth</span>"
                        }]
                    }]
                }],
                "bundleSize": 739825,
                "size": 680,
                "url": "twoway_react_vanilla_info.html",
                "bundleName": "twoway_react_vanilla.js",
                "githubUrl": "http://www.github.com/krawaller/jscomp/tree/gh-pages/demos/twoway/react/vanilla"
            }]
        }],
        "filenames": ["bootstrap", "phonebooth", "extras"],
        "description": "<p>bla bla two way data binding.</p>\n<p>Also, when you click the button, field should focus.</p>\n",
        "icount": 3,
        "folderName": "twoway",
        "name": "Twoway",
        "summary": "Demonstrating two-way data binding"
    }]
}